{"mappings":"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","sources":["<anon>","public/javascript/index.js","public/javascript/emailSend.js","public/javascript/fetchData.js","public/javascript/showAlerts.js","public/javascript/validateForm.js","public/javascript/contentAnimation.js","node_modules/split-type/dist/index.js","node_modules/motion/dist/animate.es.js","node_modules/@motionone/dom/dist/animate/index.es.js","node_modules/@motionone/animation/dist/Animation.es.js","node_modules/@motionone/utils/dist/defaults.es.js","node_modules/@motionone/utils/dist/interpolate.es.js","node_modules/@motionone/utils/dist/mix.es.js","node_modules/@motionone/utils/dist/noop.es.js","node_modules/@motionone/utils/dist/offset.es.js","node_modules/@motionone/utils/dist/progress.es.js","node_modules/@motionone/utils/dist/easing.es.js","node_modules/@motionone/utils/dist/is-easing-list.es.js","node_modules/@motionone/utils/dist/is-number.es.js","node_modules/@motionone/utils/dist/wrap.es.js","node_modules/@motionone/utils/dist/clamp.es.js","node_modules/@motionone/utils/dist/is-easing-generator.es.js","node_modules/@motionone/animation/dist/utils/easing.es.js","node_modules/@motionone/easing/dist/cubic-bezier.es.js","node_modules/@motionone/easing/dist/steps.es.js","node_modules/@motionone/utils/dist/is-cubic-bezier.es.js","node_modules/@motionone/utils/dist/is-function.es.js","node_modules/@motionone/dom/dist/animate/create-animate.es.js","node_modules/hey-listen/dist/hey-listen.es.js","node_modules/@motionone/dom/dist/animate/animate-style.es.js","node_modules/@motionone/dom/dist/animate/data.es.js","node_modules/@motionone/types/dist/MotionValue.es.js","node_modules/@motionone/dom/dist/animate/utils/css-var.es.js","node_modules/@motionone/dom/dist/animate/utils/transforms.es.js","node_modules/@motionone/utils/dist/array.es.js","node_modules/@motionone/utils/dist/time.es.js","node_modules/@motionone/dom/dist/animate/utils/easing.es.js","node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js","node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js","node_modules/@motionone/dom/dist/animate/style.es.js","node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js","node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js","node_modules/@motionone/dom/dist/animate/utils/get-unit.es.js","node_modules/@motionone/utils/dist/is-string.es.js","node_modules/@motionone/dom/dist/animate/utils/options.es.js","node_modules/@motionone/dom/dist/utils/resolve-elements.es.js","node_modules/@motionone/dom/dist/animate/utils/controls.es.js","node_modules/@motionone/dom/dist/utils/stagger.es.js","node_modules/@motionone/dom/dist/gestures/in-view.es.js","node_modules/@motionone/dom/dist/timeline/index.es.js","node_modules/tslib/tslib.es6.js","node_modules/@motionone/dom/dist/timeline/utils/calc-time.es.js","node_modules/@motionone/dom/dist/timeline/utils/edit.es.js","node_modules/@motionone/dom/dist/timeline/utils/sort.es.js"],"sourcesContent":["(() => {\nconst $84d7d782659f1eb7$export$d852f5f778460fa4 = async (url, emailData)=>{\n    try {\n        const request = fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(emailData)\n        });\n        const response = await request;\n        // Check if the response is not OK (status code outside the range 200-299)\n        if (!response.ok) {\n            const errorData = await response.json(); // Assuming the error response is in JSON format\n            throw Error(errorData.message || \"Something went wrong\");\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        if (error.message === \"Failed to fetch\") error.message = `Unable to reach the server. Please check your internet connection...`;\n        throw error;\n    }\n};\n\n\nconst $f63449e02fe9e20a$var$formBtn = document.querySelector(\".form-btn\");\nlet $f63449e02fe9e20a$var$refresh;\nconst $f63449e02fe9e20a$var$hideAlert = ()=>{\n    const element = document.querySelector(\".alert\");\n    if (element) element.parentElement.removeChild(element);\n    $f63449e02fe9e20a$var$formBtn.classList.remove(\"form-btn--rounded\"); // remove it at the same time of hiding the alert\n    if ($f63449e02fe9e20a$var$refresh) setTimeout(()=>location.assign(\"/\"), 500);\n};\nconst $f63449e02fe9e20a$export$5ea928c9faf85bd3 = (type, msg)=>{\n    const htmlCode = `<div class=\"alert alert--${type}\">${msg}</div>`;\n    document.querySelector(\"body\").insertAdjacentHTML(\"afterbegin\", htmlCode);\n    type === \"success\" ? $f63449e02fe9e20a$var$refresh = true : $f63449e02fe9e20a$var$refresh = false;\n    window.setTimeout($f63449e02fe9e20a$var$hideAlert, 4000);\n};\n\n\nconst $edcc32604132db5e$var$formBtn = document.querySelector(\".form-btn\");\nconst $edcc32604132db5e$export$1cea2e25b75a88f2 = async (data)=>{\n    try {\n        const result = await (0, $84d7d782659f1eb7$export$d852f5f778460fa4)(\"/sendEmail\", data);\n        if (result.status === \"success\") {\n            $edcc32604132db5e$var$formBtn.classList.add(\"form-btn--rounded\");\n            $edcc32604132db5e$var$formBtn.textContent = \"\\u2714\";\n            (0, $f63449e02fe9e20a$export$5ea928c9faf85bd3)(\"success\", \"Your email has been sent successfully! \\uD83D\\uDC4D\");\n        }\n        if (result.status !== \"success\") return;\n    } catch (error) {\n        (0, $f63449e02fe9e20a$export$5ea928c9faf85bd3)(\"error\", error.message);\n    }\n};\n\n\n\nconst $237a55304db5865e$var$emailRegex = new RegExp(/^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$/);\nconst $237a55304db5865e$var$formInputs = [\n    document.querySelector(\".email-form input\"),\n    document.querySelector(\".email-form textarea\")\n];\nlet $237a55304db5865e$var$formStatus = {\n    formComplete: {\n        status: false,\n        message: \"Please Fill out all the Fields before Submitting\"\n    },\n    emailFormatIsCorrect: {\n        status: false,\n        message: \"Please Insert a valid Email address!\"\n    }\n};\nconst $237a55304db5865e$var$shakingField = function(field) {\n    field.classList.add(\"shaking\");\n    setTimeout(()=>{\n        field.classList.remove(\"shaking\");\n    }, 400);\n};\nconst $237a55304db5865e$export$18148d12c805c5b0 = function(event) {\n    $237a55304db5865e$var$formStatus.emailFormatIsCorrect.status = true;\n    const userInput = event.target.value;\n    if (userInput !== \"\" && !$237a55304db5865e$var$emailRegex.test(userInput) || !$237a55304db5865e$var$emailRegex.test(userInput)) {\n        $237a55304db5865e$var$shakingField(event.target);\n        (0, $f63449e02fe9e20a$export$5ea928c9faf85bd3)(\"error\", $237a55304db5865e$var$formStatus.emailFormatIsCorrect.message);\n        $237a55304db5865e$var$formStatus.emailFormatIsCorrect.status = false;\n    }\n};\nconst $237a55304db5865e$export$ed692cabb252e59b = ()=>{\n    $237a55304db5865e$var$formStatus.formComplete.status = true;\n    $237a55304db5865e$var$formInputs.forEach((input)=>{\n        if (input.value.trim() === \"\") $237a55304db5865e$var$formStatus.formComplete.status = false;\n    });\n    return $237a55304db5865e$var$formStatus;\n};\n\n\n\n/**\n * SplitType\n * https://github.com/lukePeavey/SplitType\n * @version 0.3.4\n * @author Luke Peavey <lwpeavey@gmail.com>\n */ // Polyfill the following DOM methods that are not supported in IE 11.\n(function() {\n    function append() {\n        var length = arguments.length;\n        for(var i = 0; i < length; i++){\n            var node = i < 0 || arguments.length <= i ? undefined : arguments[i];\n            if (node.nodeType === 1 || node.nodeType === 11) this.appendChild(node);\n            else this.appendChild(document.createTextNode(String(node)));\n        }\n    }\n    function replaceChildren() {\n        while(this.lastChild)this.removeChild(this.lastChild);\n        if (arguments.length) this.append.apply(this, arguments);\n    }\n    function replaceWith() {\n        var parent = this.parentNode;\n        for(var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++)nodes[_key] = arguments[_key];\n        var i = nodes.length;\n        if (!parent) return;\n        if (!i) parent.removeChild(this);\n        while(i--){\n            var node = nodes[i];\n            if (typeof node !== \"object\") node = this.ownerDocument.createTextNode(node);\n            else if (node.parentNode) node.parentNode.removeChild(node);\n            if (!i) parent.replaceChild(node, this);\n            else parent.insertBefore(this.previousSibling, node);\n        }\n    }\n    if (typeof Element !== \"undefined\") {\n        if (!Element.prototype.append) {\n            Element.prototype.append = append;\n            DocumentFragment.prototype.append = append;\n        }\n        if (!Element.prototype.replaceChildren) {\n            Element.prototype.replaceChildren = replaceChildren;\n            DocumentFragment.prototype.replaceChildren = replaceChildren;\n        }\n        if (!Element.prototype.replaceWith) {\n            Element.prototype.replaceWith = replaceWith;\n            DocumentFragment.prototype.replaceWith = replaceWith;\n        }\n    }\n})();\nfunction $0129d5cb2313b09f$var$_classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction $0129d5cb2313b09f$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $0129d5cb2313b09f$var$_createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) $0129d5cb2313b09f$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $0129d5cb2313b09f$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction $0129d5cb2313b09f$var$_defineProperty(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\nfunction $0129d5cb2313b09f$var$ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction $0129d5cb2313b09f$var$_objectSpread2(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        if (i % 2) $0129d5cb2313b09f$var$ownKeys(Object(source), true).forEach(function(key) {\n            $0129d5cb2313b09f$var$_defineProperty(target, key, source[key]);\n        });\n        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n        else $0129d5cb2313b09f$var$ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction $0129d5cb2313b09f$var$_slicedToArray(arr, i) {\n    return $0129d5cb2313b09f$var$_arrayWithHoles(arr) || $0129d5cb2313b09f$var$_iterableToArrayLimit(arr, i) || $0129d5cb2313b09f$var$_unsupportedIterableToArray(arr, i) || $0129d5cb2313b09f$var$_nonIterableRest();\n}\nfunction $0129d5cb2313b09f$var$_toConsumableArray(arr) {\n    return $0129d5cb2313b09f$var$_arrayWithoutHoles(arr) || $0129d5cb2313b09f$var$_iterableToArray(arr) || $0129d5cb2313b09f$var$_unsupportedIterableToArray(arr) || $0129d5cb2313b09f$var$_nonIterableSpread();\n}\nfunction $0129d5cb2313b09f$var$_arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return $0129d5cb2313b09f$var$_arrayLikeToArray(arr);\n}\nfunction $0129d5cb2313b09f$var$_arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction $0129d5cb2313b09f$var$_iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction $0129d5cb2313b09f$var$_iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction $0129d5cb2313b09f$var$_unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return $0129d5cb2313b09f$var$_arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $0129d5cb2313b09f$var$_arrayLikeToArray(o, minLen);\n}\nfunction $0129d5cb2313b09f$var$_arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction $0129d5cb2313b09f$var$_nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction $0129d5cb2313b09f$var$_nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n/**\n * Shallow merges the properties of an object with the target object. Only\n * includes properties that exist on the target object. Non-writable properties\n * on the target object will not be over-written.\n *\n * @param {Object} target\n * @param {Object} object\n */ function $0129d5cb2313b09f$var$extend(target, object) {\n    return Object.getOwnPropertyNames(Object(target)).reduce(function(extended, key) {\n        var currentValue = Object.getOwnPropertyDescriptor(Object(target), key);\n        var newValue = Object.getOwnPropertyDescriptor(Object(object), key);\n        return Object.defineProperty(extended, key, newValue || currentValue);\n    }, {});\n}\n/**\n * Checks if given value is a string\n *\n * @param {any} value\n * @return {boolean} `true` if `value` is a string, else `false`\n */ function $0129d5cb2313b09f$var$isString(value) {\n    return typeof value === \"string\";\n}\nfunction $0129d5cb2313b09f$var$isArray(value) {\n    return Array.isArray(value);\n}\n/**\n * Parses user supplied settings objects.\n */ function $0129d5cb2313b09f$var$parseSettings() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var object = $0129d5cb2313b09f$var$extend(settings); // `split` may be used as an alias for the `types` option\n    // Parse the `types` settings into an array of valid split types.\n    // If `types` is explicitly set to an empty string or array, text will not be\n    // split at all.\n    var types;\n    if (object.types !== undefined) types = object.types;\n    else if (object.split !== undefined) types = object.split;\n    if (types !== undefined) object.types = ($0129d5cb2313b09f$var$isString(types) || $0129d5cb2313b09f$var$isArray(types) ? String(types) : \"\").split(\",\").map(function(type) {\n        return String(type).trim();\n    }).filter(function(type) {\n        return /((line)|(word)|(char))/i.test(type);\n    });\n     // Support `position: absolute` as an alias for `absolute: true`\n    if (object.absolute || object.position) object.absolute = object.absolute || /absolute/.test(settings.position);\n    return object;\n}\n/**\n * Takes a list of `types` and returns an object\n *\n * @param {string | string[]} value a comma separated list of split types\n * @return {{lines: boolean, words: boolean, chars: boolean}}\n */ function $0129d5cb2313b09f$var$parseTypes(value) {\n    var types = $0129d5cb2313b09f$var$isString(value) || $0129d5cb2313b09f$var$isArray(value) ? String(value) : \"\";\n    return {\n        none: !types,\n        lines: /line/i.test(types),\n        words: /word/i.test(types),\n        chars: /char/i.test(types)\n    };\n}\n/**\n * Returns true if `value` is a non-null object.\n * @param {any} value\n * @return {boolean}\n */ function $0129d5cb2313b09f$var$isObject(value) {\n    return value !== null && typeof value === \"object\";\n}\n/**\n * Returns true if `input` is one of the following:\n * - `Element`\n * - `Text`\n * - `DocumentFragment`\n */ function $0129d5cb2313b09f$var$isNode(input) {\n    return $0129d5cb2313b09f$var$isObject(input) && /^(1|3|11)$/.test(input.nodeType);\n}\n/**\n * Checks if `value` is a valid array-like length.\n * Original source: Lodash\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3)\n * // => true\n *\n * _.isLength(Number.MIN_VALUE)\n * // => false\n *\n * _.isLength(Infinity)\n * // => false\n *\n * _.isLength('3')\n * // => false\n */ function $0129d5cb2313b09f$var$isLength(value) {\n    return typeof value === \"number\" && value > -1 && value % 1 === 0;\n}\n/**\n * Checks if `value` is an array-like object\n * @param {any} value\n * @return {boolean} true if `value` is array-like`, else `false`\n * @example\n * isArrayLike(new Array())\n * // => true\n *\n * isArrayLike(document.querySelectorAll('div'))\n * // => true\n *\n * isArrayLike(document.getElementsByTagName('div'))\n * // => true\n *\n * isArrayLike(() => {})\n * // => false\n *\n * isArrayLike({foo: 'bar'})\n * // => false\n *\n * * isArrayLike(null)\n * // => false\n */ function $0129d5cb2313b09f$var$isArrayLike(value) {\n    return $0129d5cb2313b09f$var$isObject(value) && $0129d5cb2313b09f$var$isLength(value.length);\n}\n/**\n * Coerces `value` to an `Array`.\n *\n * @param {any} value\n * @return {any[]}\n * @example\n * // If `value` is any `Array`, returns original `Array`\n * let arr = [1, 2]\n * toArray(arr)\n * // => arr\n *\n * // If `value` is an `ArrayLike`, its equivalent to `Array.from(value)`\n * let nodeList = document.querySelectorAll('div')\n * toArray(nodeList)\n * // => HTMLElement[] s\n *\n * // If value is falsy, returns empty array\n * toArray(null)\n * // => []\n *\n * // For any other type of value, its equivalent to `Array.of(value)`\n * let element = document.createElement('div')\n * toArray(element)\n * // => [element]\n *\n */ function $0129d5cb2313b09f$var$toArray(value) {\n    if ($0129d5cb2313b09f$var$isArray(value)) return value;\n    if (value == null) return [];\n    return $0129d5cb2313b09f$var$isArrayLike(value) ? Array.prototype.slice.call(value) : [\n        value\n    ];\n}\n/**\n * Processes target elements for the splitType function.\n *\n * @param {any} target Can be one of the following:\n * 1. `string` - A css selector\n * 2. `HTMLElement` - A single element\n * 3. `NodeList` - A nodeList\n * 4. `Element[]` - An array of elements\n * 5. `Array<NodeList|Element[]>` - An nested array of elements\n * @returns {Element[]} A flat array HTML elements\n * @return A flat array of elements or empty array if no elements are found\n */ function $0129d5cb2313b09f$var$getTargetElements(target) {\n    var elements = target; // If `target` is a selector string...\n    if ($0129d5cb2313b09f$var$isString(target)) {\n        if (/^(#[a-z]\\w+)$/.test(target.trim())) // If `target` is an ID, use `getElementById`\n        elements = document.getElementById(target.trim().slice(1));\n        else // Else use `querySelectorAll`\n        elements = document.querySelectorAll(target);\n    } // Return a flattened array of elements\n    return $0129d5cb2313b09f$var$toArray(elements).reduce(function(result, element) {\n        return [].concat($0129d5cb2313b09f$var$_toConsumableArray(result), $0129d5cb2313b09f$var$_toConsumableArray($0129d5cb2313b09f$var$toArray(element).filter($0129d5cb2313b09f$var$isNode)));\n    }, []);\n}\nvar $0129d5cb2313b09f$var$entries = Object.entries;\nvar $0129d5cb2313b09f$var$expando = \"_splittype\";\nvar $0129d5cb2313b09f$var$cache = {};\nvar $0129d5cb2313b09f$var$uid = 0;\n/**\n * Stores data associated with DOM elements or other objects. This is a\n * simplified version of jQuery's data method.\n *\n * @signature Data(owner)\n * @description Get the data store object for the given owner.\n * @param {Object} owner the object that data will be associated with.\n * @return {Object} the data object for given `owner`. If no data exists\n *     for the given object, creates a new data store and returns it.\n *\n * @signature Data(owner, key)\n * @description Get the value\n * @param {Object} owner\n * @param {string} key\n * @return {any} the value of the provided key. If key does not exist, returns\n *     undefined.\n *\n * @signature Data(owner, key, value)\n * @description Sets the given key/value pair in data store\n * @param {Object} owner\n * @param {string} key\n * @param {any} value\n */ function $0129d5cb2313b09f$var$set(owner, key, value) {\n    if (!$0129d5cb2313b09f$var$isObject(owner)) {\n        console.warn(\"[data.set] owner is not an object\");\n        return null;\n    }\n    var id = owner[$0129d5cb2313b09f$var$expando] || (owner[$0129d5cb2313b09f$var$expando] = ++$0129d5cb2313b09f$var$uid);\n    var data = $0129d5cb2313b09f$var$cache[id] || ($0129d5cb2313b09f$var$cache[id] = {});\n    if (value === undefined) {\n        if (!!key && Object.getPrototypeOf(key) === Object.prototype) $0129d5cb2313b09f$var$cache[id] = $0129d5cb2313b09f$var$_objectSpread2($0129d5cb2313b09f$var$_objectSpread2({}, data), key);\n    } else if (key !== undefined) data[key] = value;\n    return value;\n}\nfunction $0129d5cb2313b09f$var$get(owner, key) {\n    var id = $0129d5cb2313b09f$var$isObject(owner) ? owner[$0129d5cb2313b09f$var$expando] : null;\n    var data = id && $0129d5cb2313b09f$var$cache[id] || {};\n    if (key === undefined) return data;\n    return data[key];\n}\n/**\n * Remove all data associated with the given element\n */ function $0129d5cb2313b09f$var$remove(element) {\n    var id = element && element[$0129d5cb2313b09f$var$expando];\n    if (id) {\n        delete element[id];\n        delete $0129d5cb2313b09f$var$cache[id];\n    }\n}\n/**\n * Clear all cached data\n */ function $0129d5cb2313b09f$var$clear() {\n    Object.keys($0129d5cb2313b09f$var$cache).forEach(function(key) {\n        delete $0129d5cb2313b09f$var$cache[key];\n    });\n}\n/**\n * Remove all temporary data from the store.\n */ function $0129d5cb2313b09f$var$cleanup() {\n    $0129d5cb2313b09f$var$entries($0129d5cb2313b09f$var$cache).forEach(function(_ref) {\n        var _ref2 = $0129d5cb2313b09f$var$_slicedToArray(_ref, 2), id = _ref2[0], _ref2$ = _ref2[1], isRoot = _ref2$.isRoot, isSplit = _ref2$.isSplit;\n        if (!isRoot || !isSplit) {\n            $0129d5cb2313b09f$var$cache[id] = null;\n            delete $0129d5cb2313b09f$var$cache[id];\n        }\n    });\n}\n/**\n * Splits a string into an array of words.\n *\n * @param {string} string\n * @param {string | RegExp} [separator = ' ']\n * @return {string[]} Array of words\n */ function $0129d5cb2313b09f$var$toWords(value) {\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \" \";\n    var string = value ? String(value) : \"\";\n    return string.trim().replace(/\\s+/g, \" \").split(separator);\n}\n/**\n * Based on lodash#split <https://lodash.com/license>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters &\n * Editors\n */ var $0129d5cb2313b09f$var$rsAstralRange = \"\\ud800-\\udfff\";\nvar $0129d5cb2313b09f$var$rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\";\nvar $0129d5cb2313b09f$var$rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\";\nvar $0129d5cb2313b09f$var$rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */ var $0129d5cb2313b09f$var$rsAstral = \"[\".concat($0129d5cb2313b09f$var$rsAstralRange, \"]\");\nvar $0129d5cb2313b09f$var$rsCombo = \"[\".concat($0129d5cb2313b09f$var$rsComboMarksRange).concat($0129d5cb2313b09f$var$rsComboSymbolsRange, \"]\");\nvar $0129d5cb2313b09f$var$rsFitz = \"\\ud83c[\\udffb-\\udfff]\";\nvar $0129d5cb2313b09f$var$rsModifier = \"(?:\".concat($0129d5cb2313b09f$var$rsCombo, \"|\").concat($0129d5cb2313b09f$var$rsFitz, \")\");\nvar $0129d5cb2313b09f$var$rsNonAstral = \"[^\".concat($0129d5cb2313b09f$var$rsAstralRange, \"]\");\nvar $0129d5cb2313b09f$var$rsRegional = \"(?:\\ud83c[\\udde6-\\uddff]){2}\";\nvar $0129d5cb2313b09f$var$rsSurrPair = \"[\\ud800-\\udbff][\\udc00-\\udfff]\";\nvar $0129d5cb2313b09f$var$rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */ var $0129d5cb2313b09f$var$reOptMod = \"\".concat($0129d5cb2313b09f$var$rsModifier, \"?\");\nvar $0129d5cb2313b09f$var$rsOptVar = \"[\".concat($0129d5cb2313b09f$var$rsVarRange, \"]?\");\nvar $0129d5cb2313b09f$var$rsOptJoin = \"(?:\" + $0129d5cb2313b09f$var$rsZWJ + \"(?:\" + [\n    $0129d5cb2313b09f$var$rsNonAstral,\n    $0129d5cb2313b09f$var$rsRegional,\n    $0129d5cb2313b09f$var$rsSurrPair\n].join(\"|\") + \")\" + $0129d5cb2313b09f$var$rsOptVar + $0129d5cb2313b09f$var$reOptMod + \")*\";\nvar $0129d5cb2313b09f$var$rsSeq = $0129d5cb2313b09f$var$rsOptVar + $0129d5cb2313b09f$var$reOptMod + $0129d5cb2313b09f$var$rsOptJoin;\nvar $0129d5cb2313b09f$var$rsSymbol = \"(?:\".concat([\n    \"\".concat($0129d5cb2313b09f$var$rsNonAstral).concat($0129d5cb2313b09f$var$rsCombo, \"?\"),\n    $0129d5cb2313b09f$var$rsCombo,\n    $0129d5cb2313b09f$var$rsRegional,\n    $0129d5cb2313b09f$var$rsSurrPair,\n    $0129d5cb2313b09f$var$rsAstral\n].join(\"|\"), \"\\n)\");\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */ var $0129d5cb2313b09f$var$reUnicode = RegExp(\"\".concat($0129d5cb2313b09f$var$rsFitz, \"(?=\").concat($0129d5cb2313b09f$var$rsFitz, \")|\").concat($0129d5cb2313b09f$var$rsSymbol).concat($0129d5cb2313b09f$var$rsSeq), \"g\");\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */ var $0129d5cb2313b09f$var$unicodeRange = [\n    $0129d5cb2313b09f$var$rsZWJ,\n    $0129d5cb2313b09f$var$rsAstralRange,\n    $0129d5cb2313b09f$var$rsComboMarksRange,\n    $0129d5cb2313b09f$var$rsComboSymbolsRange,\n    $0129d5cb2313b09f$var$rsVarRange\n];\nvar $0129d5cb2313b09f$var$reHasUnicode = RegExp(\"[\".concat($0129d5cb2313b09f$var$unicodeRange.join(\"\"), \"]\"));\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */ function $0129d5cb2313b09f$var$asciiToArray(string) {\n    return string.split(\"\");\n}\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */ function $0129d5cb2313b09f$var$hasUnicode(string) {\n    return $0129d5cb2313b09f$var$reHasUnicode.test(string);\n}\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */ function $0129d5cb2313b09f$var$unicodeToArray(string) {\n    return string.match($0129d5cb2313b09f$var$reUnicode) || [];\n}\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */ function $0129d5cb2313b09f$var$stringToArray(string) {\n    return $0129d5cb2313b09f$var$hasUnicode(string) ? $0129d5cb2313b09f$var$unicodeToArray(string) : $0129d5cb2313b09f$var$asciiToArray(string);\n}\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values.\n *\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */ function $0129d5cb2313b09f$var$toString(value) {\n    return value == null ? \"\" : String(value);\n}\n/**\n * Splits `string` into an array of characters. If `separator` is omitted,\n * it behaves likes split.split('').\n *\n * Unlike native string.split(''), it can split strings that contain unicode\n * characters like emojis and symbols.\n *\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} [separator=''] The separator pattern to split by.\n * @returns {Array} Returns the string segments.\n * @example\n * toChars('foo');\n * // => ['f', 'o', 'o']\n *\n * toChars('foo bar');\n * // => [\"f\", \"o\", \"o\", \" \", \"b\", \"a\", \"r\"]\n *\n * toChars('f😀o');\n * // => ['f', '😀', 'o']\n *\n * toChars('f-😀-o', /-/);\n * // => ['f', '😀', 'o']\n *\n */ function $0129d5cb2313b09f$var$toChars(string) {\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    string = $0129d5cb2313b09f$var$toString(string);\n    if (string && $0129d5cb2313b09f$var$isString(string)) {\n        if (!separator && $0129d5cb2313b09f$var$hasUnicode(string)) return $0129d5cb2313b09f$var$stringToArray(string);\n    }\n    return string.split(separator);\n}\n/**\n * Create an HTML element with the the given attributes\n *\n * attributes can include standard HTML attribute, as well as the following\n * \"special\" properties:\n *   - children: HTMLElement | ArrayLike<HTMLElement>\n *   - textContent: string\n *   - innerHTML: string\n *\n * @param {string} name\n * @param  {Object} [attributes]\n * @returns {HTMLElement}\n */ function $0129d5cb2313b09f$var$createElement(name, attributes) {\n    var element = document.createElement(name);\n    if (!attributes) // When called without the second argument, its just return the result\n    // of `document.createElement`\n    return element;\n    Object.keys(attributes).forEach(function(attribute) {\n        var rawValue = attributes[attribute];\n        var value = $0129d5cb2313b09f$var$isString(rawValue) ? rawValue.trim() : rawValue; // Ignore attribute if the value is `null` or an empty string\n        if (value === null || value === \"\") return;\n        if (attribute === \"children\") // Children can be one or more Elements or DOM strings\n        element.append.apply(element, $0129d5cb2313b09f$var$_toConsumableArray($0129d5cb2313b09f$var$toArray(value)));\n        else // Handle standard HTML attributes\n        element.setAttribute(attribute, value);\n    });\n    return element;\n}\nvar $0129d5cb2313b09f$var$defaults = {\n    splitClass: \"\",\n    lineClass: \"line\",\n    wordClass: \"word\",\n    charClass: \"char\",\n    types: [\n        \"lines\",\n        \"words\",\n        \"chars\"\n    ],\n    absolute: false,\n    tagName: \"div\"\n};\n/**\n * Splits the text content of a single TextNode into words and/or characters.\n *\n * This functions gets called for every text node inside the target element. It\n * replaces the text node with a document fragment containing the split text.\n * Returns an array of the split word and character elements from this node.\n *\n * @param {TextNode} textNode\n * @param {Object} settings\n * @return {{words: Element[], chars: Element[]}}\n */ function $0129d5cb2313b09f$var$splitWordsAndChars(textNode, settings) {\n    settings = $0129d5cb2313b09f$var$extend($0129d5cb2313b09f$var$defaults, settings); // The split types\n    var types = $0129d5cb2313b09f$var$parseTypes(settings.types); // the tag name for split text nodes\n    var TAG_NAME = settings.tagName; // value of the text node\n    var VALUE = textNode.nodeValue; // `splitText` is a wrapper to hold the HTML structure\n    var splitText = document.createDocumentFragment(); // Arrays of split word and character elements\n    var words = [];\n    var chars = [];\n    if (/^\\s/.test(VALUE)) splitText.append(\" \");\n     // Create an array of wrapped word elements.\n    words = $0129d5cb2313b09f$var$toWords(VALUE).reduce(function(result, WORD, idx, arr) {\n        // Let `wordElement` be the wrapped element for the current word\n        var wordElement;\n        var characterElementsForCurrentWord; // -> If splitting text into characters...\n        if (types.chars) // Iterate through the characters in the current word\n        characterElementsForCurrentWord = $0129d5cb2313b09f$var$toChars(WORD).map(function(CHAR) {\n            var characterElement = $0129d5cb2313b09f$var$createElement(TAG_NAME, {\n                \"class\": \"\".concat(settings.splitClass, \" \").concat(settings.charClass),\n                style: \"display: inline-block;\",\n                children: CHAR\n            });\n            $0129d5cb2313b09f$var$set(characterElement, \"isChar\", true);\n            chars = [].concat($0129d5cb2313b09f$var$_toConsumableArray(chars), [\n                characterElement\n            ]);\n            return characterElement;\n        });\n         // END IF;\n        if (types.words || types.lines) {\n            // -> If Splitting Text Into Words...\n            //    Create an element to wrap the current word. If we are also\n            //    splitting text into characters, the word element will contain the\n            //    wrapped character nodes for this word. If not, it will contain the\n            //    plain text content (WORD)\n            wordElement = $0129d5cb2313b09f$var$createElement(TAG_NAME, {\n                \"class\": \"\".concat(settings.wordClass, \" \").concat(settings.splitClass),\n                style: \"display: inline-block; \".concat(types.words && settings.absolute ? \"position: relative;\" : \"\"),\n                children: types.chars ? characterElementsForCurrentWord : WORD\n            });\n            $0129d5cb2313b09f$var$set(wordElement, {\n                isWord: true,\n                isWordStart: true,\n                isWordEnd: true\n            });\n            splitText.appendChild(wordElement);\n        } else // -> If NOT splitting into words OR lines...\n        //    Append the characters elements directly to splitText.\n        characterElementsForCurrentWord.forEach(function(characterElement) {\n            splitText.appendChild(characterElement);\n        });\n        if (idx < arr.length - 1) // Add a space after the word.\n        splitText.append(\" \");\n         // If not splitting text into words, we return an empty array\n        return types.words ? result.concat(wordElement) : result;\n    }, []); // END LOOP;\n    // Add a trailing white space to maintain word spacing\n    if (/\\s$/.test(VALUE)) splitText.append(\" \");\n    textNode.replaceWith(splitText);\n    return {\n        words: words,\n        chars: chars\n    };\n}\n/**\n * Splits the text content of a target element into words and/or characters.\n * The function is recursive, it will also split the text content of any child\n * elements into words/characters, while preserving the nested elements.\n *\n * @param {Node} node an HTML Element or Text Node\n * @param {Object} setting splitType settings\n */ function $0129d5cb2313b09f$var$split(node, settings) {\n    var type = node.nodeType; // Arrays of split words and characters\n    var wordsAndChars = {\n        words: [],\n        chars: []\n    }; // Only proceed if `node` is an `Element`, `Fragment`, or `Text`\n    if (!/(1|3|11)/.test(type)) return wordsAndChars;\n     // A) IF `node` is TextNode that contains characters other than white space...\n    //    Split the text content of the node into words and/or characters\n    //    return an object containing the split word and character elements\n    if (type === 3 && /\\S/.test(node.nodeValue)) return $0129d5cb2313b09f$var$splitWordsAndChars(node, settings);\n     // B) ELSE `node` is an 'Element'\n    //    Iterate through its child nodes, calling the `split` function\n    //    recursively for each child node.\n    var childNodes = $0129d5cb2313b09f$var$toArray(node.childNodes);\n    if (childNodes.length) {\n        $0129d5cb2313b09f$var$set(node, \"isSplit\", true); // we need to set a few styles on nested html elements\n        if (!$0129d5cb2313b09f$var$get(node).isRoot) {\n            node.style.display = \"inline-block\";\n            node.style.position = \"relative\"; // To maintain original spacing around nested elements when we are\n            // splitting text into lines, we need to check if the element should\n            // have a space before and after, and store that value for later.\n            // Note: this was necessary to maintain the correct spacing when nested\n            // elements do not align with word boundaries. For example, a nested\n            // element only wraps part of a word.\n            var nextSibling = node.nextSibling;\n            var prevSibling = node.previousSibling;\n            var text = node.textContent || \"\";\n            var textAfter = nextSibling ? nextSibling.textContent : \" \";\n            var textBefore = prevSibling ? prevSibling.textContent : \" \";\n            $0129d5cb2313b09f$var$set(node, {\n                isWordEnd: /\\s$/.test(text) || /^\\s/.test(textAfter),\n                isWordStart: /^\\s/.test(text) || /\\s$/.test(textBefore)\n            });\n        }\n    } // Iterate through child nodes, calling `split` recursively\n    // Returns an object containing all split words and chars\n    return childNodes.reduce(function(result, child) {\n        var _split = $0129d5cb2313b09f$var$split(child, settings), words = _split.words, chars = _split.chars;\n        return {\n            words: [].concat($0129d5cb2313b09f$var$_toConsumableArray(result.words), $0129d5cb2313b09f$var$_toConsumableArray(words)),\n            chars: [].concat($0129d5cb2313b09f$var$_toConsumableArray(result.chars), $0129d5cb2313b09f$var$_toConsumableArray(chars))\n        };\n    }, wordsAndChars);\n}\n/**\n * Gets the height and position of an element relative to offset parent.\n * Should be equivalent to offsetTop and offsetHeight, but with sub-pixel\n * precision.\n *\n * TODO needs work\n */ function $0129d5cb2313b09f$var$getPosition(node, isWord, settings, scrollPos) {\n    if (!settings.absolute) return {\n        top: isWord ? node.offsetTop : null\n    };\n    var parent = node.offsetParent;\n    var _scrollPos = $0129d5cb2313b09f$var$_slicedToArray(scrollPos, 2), scrollX = _scrollPos[0], scrollY = _scrollPos[1];\n    var parentX = 0;\n    var parentY = 0;\n    if (parent && parent !== document.body) {\n        var parentRect = parent.getBoundingClientRect();\n        parentX = parentRect.x + scrollX;\n        parentY = parentRect.y + scrollY;\n    }\n    var _node$getBoundingClie = node.getBoundingClientRect(), width = _node$getBoundingClie.width, height = _node$getBoundingClie.height, x = _node$getBoundingClie.x, y = _node$getBoundingClie.y;\n    var top = y + scrollY - parentY;\n    var left = x + scrollX - parentX;\n    return {\n        width: width,\n        height: height,\n        top: top,\n        left: left\n    };\n}\n/**\n * Recursively \"un-splits\" text into words.\n * This is used when splitting text into lines but not words.\n * We initially split the text into words so we can maintain the correct line\n * breaks. Once text has been split into lines, we \"un-split\" the words...\n * @param {Element}\n * @return {void}\n */ function $0129d5cb2313b09f$var$unSplitWords(element) {\n    if (!$0129d5cb2313b09f$var$get(element).isWord) $0129d5cb2313b09f$var$toArray(element.children).forEach(function(child) {\n        return $0129d5cb2313b09f$var$unSplitWords(child);\n    });\n    else {\n        $0129d5cb2313b09f$var$remove(element);\n        element.replaceWith.apply(element, $0129d5cb2313b09f$var$_toConsumableArray(element.childNodes));\n    }\n}\nvar $0129d5cb2313b09f$var$createFragment = function createFragment() {\n    return document.createDocumentFragment();\n};\nfunction $0129d5cb2313b09f$var$repositionAfterSplit(element, settings, scrollPos) {\n    var types = $0129d5cb2313b09f$var$parseTypes(settings.types);\n    var TAG_NAME = settings.tagName;\n    var nodes = element.getElementsByTagName(\"*\");\n    var wordsInEachLine = [];\n    var wordsInCurrentLine = [];\n    var lineOffsetY = null;\n    var elementHeight;\n    var elementWidth;\n    var contentBox;\n    var lines = [];\n    /**------------------------------------------------\n   ** GET STYLES AND POSITIONS\n   **-----------------------------------------------*/ // There is no built-in way to detect natural line breaks in text (when a\n    // block of text wraps to fit its container). To split text into lines, we\n    // have to detect line breaks by checking the top offset of words. This is\n    // why text was split into words first. To apply absolute\n    // positioning, its also necessary to record the size and position of every\n    // split node (lines, words, characters).\n    // To consolidate DOM getting/settings, this is all done at the same time,\n    // before actually splitting text into lines, which involves restructuring\n    // the DOM again.\n    // Cache the element's parent and next sibling (for DOM removal).\n    var parent = element.parentElement;\n    var nextSibling = element.nextElementSibling; // a wrapper for the new HTML structure\n    var splitText = $0129d5cb2313b09f$var$createFragment(); // get the computed style object for the element\n    var cs = window.getComputedStyle(element);\n    var align = cs.textAlign;\n    var fontSize = parseFloat(cs.fontSize);\n    var lineThreshold = fontSize * 0.2; // IF using absolute position...\n    if (settings.absolute) {\n        // Let contentBox be an object containing the width and offset position of\n        // the element's content box (the area inside padding box). This is needed\n        // (for absolute positioning) to set the width and position of line\n        // elements, which have not been created yet.\n        contentBox = {\n            left: element.offsetLeft,\n            top: element.offsetTop,\n            width: element.offsetWidth\n        }; // Let elementWidth and elementHeight be the actual width/height of the\n        // element. Also check if the element has inline height or width styles\n        // already set. If it does, cache those values for later.\n        elementWidth = element.offsetWidth;\n        elementHeight = element.offsetHeight; // Store the original inline height and width of the element\n        $0129d5cb2313b09f$var$set(element, {\n            cssWidth: element.style.width,\n            cssHeight: element.style.height\n        });\n    } // Iterate over every node in the target element\n    $0129d5cb2313b09f$var$toArray(nodes).forEach(function(node) {\n        // node is a word element or custom html element\n        var isWordLike = node.parentElement === element; // TODO needs work\n        // Get te size and position of split text nodes\n        var _getPosition = $0129d5cb2313b09f$var$getPosition(node, isWordLike, settings, scrollPos), width = _getPosition.width, height = _getPosition.height, top = _getPosition.top, left = _getPosition.left; // If element is a `<br>` tag return here\n        if (/^br$/i.test(node.nodeName)) return;\n        if (types.lines && isWordLike) {\n            // We compare the top offset of the current word to the top offset of\n            // previous words on the current line. If the difference is greater than\n            // our defined threshold (20%), we assume this word is on a new line.\n            if (lineOffsetY === null || top - lineOffsetY >= lineThreshold) {\n                lineOffsetY = top;\n                wordsInEachLine.push(wordsInCurrentLine = []);\n            } // Add the current word node to the line array\n            wordsInCurrentLine.push(node);\n        } // END IF\n        if (settings.absolute) // Store the size and position split text nodes\n        $0129d5cb2313b09f$var$set(node, {\n            top: top,\n            left: left,\n            width: width,\n            height: height\n        });\n    }); // END LOOP\n    // Remove the element from the DOM\n    if (parent) parent.removeChild(element);\n    /**------------------------------------------------\n   ** SPLIT LINES\n   **-----------------------------------------------*/ if (types.lines) {\n        // Iterate over lines of text (see 11 b)\n        // Let `line` be the array of words in the current line.\n        // Return an array of the wrapped line elements (lineElements)\n        lines = wordsInEachLine.map(function(wordsInThisLine) {\n            // Create an element to wrap the current line.\n            var lineElement = $0129d5cb2313b09f$var$createElement(TAG_NAME, {\n                \"class\": \"\".concat(settings.splitClass, \" \").concat(settings.lineClass),\n                style: \"display: block; text-align: \".concat(align, \"; width: 100%;\")\n            });\n            $0129d5cb2313b09f$var$set(lineElement, \"isLine\", true);\n            var lineDimensions = {\n                height: 0,\n                top: 1e4\n            }; // Append the `lineElement` to `container`\n            splitText.appendChild(lineElement); // Iterate over the word-level elements in the current line.\n            // Note: wordOrElement can either be a word node or nested element\n            wordsInThisLine.forEach(function(wordOrElement, idx, arr) {\n                var _data$get = $0129d5cb2313b09f$var$get(wordOrElement), isWordEnd = _data$get.isWordEnd, top = _data$get.top, height = _data$get.height;\n                var next = arr[idx + 1]; // Determine line height / y-position\n                // we use the height and offsetTop of the words which we already\n                // recorded. Because custom nested elements could have their own\n                // styles, the words on a line may not all be the same height or\n                // y position. So we take the greatest height / y - offset of the\n                // words on this line.\n                lineDimensions.height = Math.max(lineDimensions.height, height);\n                lineDimensions.top = Math.min(lineDimensions.top, top); // append the current word/element\n                lineElement.appendChild(wordOrElement); // Determine if there should space after the current element...\n                // If this is not the last word on the current line.\n                // TODO - logic for handing spacing can be improved\n                if (isWordEnd && $0129d5cb2313b09f$var$get(next).isWordStart) lineElement.append(\" \");\n            }); // END LOOP\n            if (settings.absolute) $0129d5cb2313b09f$var$set(lineElement, {\n                height: lineDimensions.height,\n                top: lineDimensions.top\n            });\n            return lineElement;\n        }); // END LOOP\n        if (!types.words) $0129d5cb2313b09f$var$unSplitWords(splitText);\n         // 10. Insert the new container\n        element.replaceChildren(splitText);\n    }\n    /**------------------------------------------------\n   **  SET ABSOLUTE POSITION\n   **-----------------------------------------------*/ // Apply absolute positioning to all child elements of the target element.\n    // This includes split lines, words, chars, and custom HTML elements that were\n    // included by the user. The size and position of child elements has already\n    // been recorded before splitting text into lines.\n    if (settings.absolute) {\n        // Set the width/height of the parent element so it does not collapse\n        // when its children are set to absolute position.\n        element.style.width = \"\".concat(element.style.width || elementWidth, \"px\");\n        element.style.height = \"\".concat(elementHeight, \"px\"); // Iterate over all child elements\n        $0129d5cb2313b09f$var$toArray(nodes).forEach(function(node) {\n            var _data$get2 = $0129d5cb2313b09f$var$get(node), isLine = _data$get2.isLine, top = _data$get2.top, left = _data$get2.left, width = _data$get2.width, height = _data$get2.height;\n            var parentData = $0129d5cb2313b09f$var$get(node.parentElement);\n            var isChildOfLineNode = !isLine && parentData.isLine; // Set the top position of the current node.\n            // -> If `node` a line element, we use the top offset of its first child\n            // -> If `node` the child of line element, then its top offset is zero\n            node.style.top = \"\".concat(isChildOfLineNode ? top - parentData.top : top, \"px\"); // Set the left position of the current node.\n            // -> IF `node` is a line element, this is equal to the position left of\n            //    the content box of the parent element\n            // -> IF `node` is the child of a line element, the value has to adjusted\n            //    so its relative to the line element\n            node.style.left = isLine ? \"\".concat(contentBox.left, \"px\") : \"\".concat(left - (isChildOfLineNode ? contentBox.left : 0), \"px\"); // Set the height of the current node to the cached value.\n            node.style.height = \"\".concat(height, \"px\"); //  Set the width of the current node.\n            //  If its a line element, width is equal to the width of the contentBox.\n            node.style.width = isLine ? \"\".concat(contentBox.width, \"px\") : \"\".concat(width, \"px\"); // Finally, set the node's position to absolute.\n            node.style.position = \"absolute\";\n        });\n    } // end if;\n    // 14. Re-attach the element to the DOM\n    if (parent) {\n        if (nextSibling) parent.insertBefore(element, nextSibling);\n        else parent.appendChild(element);\n    }\n    return lines;\n}\nvar $0129d5cb2313b09f$var$_defaults = $0129d5cb2313b09f$var$extend($0129d5cb2313b09f$var$defaults, {});\nvar $0129d5cb2313b09f$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {\n    $0129d5cb2313b09f$var$_createClass(SplitType, null, [\n        {\n            key: \"clearData\",\n            /**\n     * CLears all data\n     */ value: function clearData() {\n                $0129d5cb2313b09f$var$clear();\n            }\n        },\n        {\n            key: \"setDefaults\",\n            /**\n     * Sets the default settings for all SplitType instances.\n     * The provided object will be merged with the existing defaults objects.\n     *\n     * @param {Object} settings an object containing the settings to override\n     * @returns {Object} the new default settings\n     * @public\n     * @static\n     * @example\n     * SplitType.setDefaults({ \"position\": \"absolute\" })\n     */ value: function setDefaults(options) {\n                $0129d5cb2313b09f$var$_defaults = $0129d5cb2313b09f$var$extend($0129d5cb2313b09f$var$_defaults, $0129d5cb2313b09f$var$parseSettings(options));\n                return $0129d5cb2313b09f$var$defaults;\n            }\n        },\n        {\n            key: \"revert\",\n            value: function revert(elements) {\n                $0129d5cb2313b09f$var$getTargetElements(elements).forEach(function(element) {\n                    var _data$get = $0129d5cb2313b09f$var$get(element), isSplit = _data$get.isSplit, html = _data$get.html, cssWidth = _data$get.cssWidth, cssHeight = _data$get.cssHeight;\n                    if (isSplit) {\n                        element.innerHTML = html;\n                        element.style.width = cssWidth || \"\";\n                        element.style.height = cssHeight || \"\";\n                        $0129d5cb2313b09f$var$remove(element);\n                    }\n                });\n            }\n        },\n        {\n            key: \"create\",\n            value: function create(target, options) {\n                return new SplitType(target, options);\n            }\n        },\n        {\n            key: \"data\",\n            /**\n     * The internal data store\n     */ get: function get() {\n                return $0129d5cb2313b09f$var$cache;\n            }\n        },\n        {\n            key: \"defaults\",\n            get: function get() {\n                return $0129d5cb2313b09f$var$_defaults;\n            },\n            set: function set(options) {\n                $0129d5cb2313b09f$var$_defaults = $0129d5cb2313b09f$var$extend($0129d5cb2313b09f$var$_defaults, $0129d5cb2313b09f$var$parseSettings(options));\n            }\n        }\n    ]);\n    function SplitType(elements, options) {\n        $0129d5cb2313b09f$var$_classCallCheck(this, SplitType);\n        this.isSplit = false;\n        this.settings = $0129d5cb2313b09f$var$extend($0129d5cb2313b09f$var$_defaults, $0129d5cb2313b09f$var$parseSettings(options));\n        this.elements = $0129d5cb2313b09f$var$getTargetElements(elements); // Start the split process\n        this.split();\n    }\n    /**\n   * Splits the text in all target elements. This method is called\n   * automatically when a new SplitType instance is created. It can also be\n   * called manually to re-split text with new options.\n   * @param {Object} options\n   * @public\n   */ $0129d5cb2313b09f$var$_createClass(SplitType, [\n        {\n            key: \"split\",\n            value: function split$1(options) {\n                var _this = this;\n                // Revert target elements (if they are already split)\n                // Note: revert was already called once in the constructor. However, we\n                // need to call it again here so text is reverted when the user manually\n                // calls the `split` method to re-split text.\n                this.revert(); // Store the original html content of each target element\n                this.elements.forEach(function(element) {\n                    $0129d5cb2313b09f$var$set(element, \"html\", element.innerHTML);\n                }); // Create arrays to hold the split lines, words, and characters\n                this.lines = [];\n                this.words = [];\n                this.chars = []; // cache vertical scroll position before splitting\n                var scrollPos = [\n                    window.pageXOffset,\n                    window.pageYOffset\n                ]; // If new options were passed into the `split()` method, update settings\n                if (options !== undefined) this.settings = $0129d5cb2313b09f$var$extend(this.settings, $0129d5cb2313b09f$var$parseSettings(options));\n                var types = $0129d5cb2313b09f$var$parseTypes(this.settings.types); // If the `types` option is set to an empty array, text will not be split.\n                // @example new SplitType('#target', { types: [] })\n                if (types.none) return;\n                 // Split text in each target element\n                this.elements.forEach(function(element) {\n                    // Add the split text nodes from this element to the arrays of all split\n                    // text nodes for this instance.\n                    $0129d5cb2313b09f$var$set(element, \"isRoot\", true);\n                    var _split2 = $0129d5cb2313b09f$var$split(element, _this.settings), words = _split2.words, chars = _split2.chars;\n                    _this.words = [].concat($0129d5cb2313b09f$var$_toConsumableArray(_this.words), $0129d5cb2313b09f$var$_toConsumableArray(words));\n                    _this.chars = [].concat($0129d5cb2313b09f$var$_toConsumableArray(_this.chars), $0129d5cb2313b09f$var$_toConsumableArray(chars));\n                });\n                this.elements.forEach(function(element) {\n                    if (types.lines || _this.settings.absolute) {\n                        var lines = $0129d5cb2313b09f$var$repositionAfterSplit(element, _this.settings, scrollPos);\n                        _this.lines = [].concat($0129d5cb2313b09f$var$_toConsumableArray(_this.lines), $0129d5cb2313b09f$var$_toConsumableArray(lines));\n                    }\n                }); // Set isSplit to true for the SplitType instance\n                this.isSplit = true; // Set scroll position to cached value.\n                window.scrollTo(scrollPos[0], scrollPos[1]); // Clean up stored data\n                $0129d5cb2313b09f$var$cleanup();\n            }\n        },\n        {\n            key: \"revert\",\n            value: function revert() {\n                if (this.isSplit) {\n                    // Reset instance properties if necessary\n                    this.lines = null;\n                    this.words = null;\n                    this.chars = null;\n                    this.isSplit = false;\n                }\n                SplitType.revert(this.elements);\n            }\n        }\n    ]);\n    return SplitType;\n}();\n\n\nconst $dc2d63b917c60329$export$ebe90cb607ad99e = {\n    duration: 0.3,\n    delay: 0,\n    endDelay: 0,\n    repeat: 0,\n    easing: \"ease\"\n};\n\nconst $26fc349e92d9489e$export$2c9e8a9632a706b2 = (min, max, progress)=>-progress * min + progress * max + min;\n\n\nconst $a9ec4c6371c8c8ef$export$8793edee2d425525 = ()=>{};\nconst $a9ec4c6371c8c8ef$export$ea6e51872ab1b721 = (v)=>v;\n\n\n\nconst $b5fe3643ba3c2da8$export$504d7abb21fa8c9 = (min, max, value)=>max - min === 0 ? 1 : (value - min) / (max - min);\n\n\nfunction $9b3af257d77590ba$export$dafee61230cf05c6(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for(let i = 1; i <= remaining; i++){\n        const offsetProgress = (0, $b5fe3643ba3c2da8$export$504d7abb21fa8c9)(0, remaining, i);\n        offset.push((0, $26fc349e92d9489e$export$2c9e8a9632a706b2)(min, 1, offsetProgress));\n    }\n}\nfunction $9b3af257d77590ba$export$24dbcec0b26e6d9d(length) {\n    const offset = [\n        0\n    ];\n    $9b3af257d77590ba$export$dafee61230cf05c6(offset, length - 1);\n    return offset;\n}\n\n\n\nconst $2600ec0fa268729d$export$7e4aa119212bc614 = (value)=>typeof value === \"number\";\n\n\nconst $0f92e8df025f9218$export$981cc9ef33696dc8 = (easing)=>Array.isArray(easing) && !(0, $2600ec0fa268729d$export$7e4aa119212bc614)(easing[0]);\n\n\nconst $50822229f89c800a$export$4997ffc0176396a6 = (min, max, v)=>{\n    const rangeSize = max - min;\n    return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\n\nfunction $e7e8fb4e721c4127$export$41c5e731255a462(easing, i) {\n    return (0, $0f92e8df025f9218$export$981cc9ef33696dc8)(easing) ? easing[(0, $50822229f89c800a$export$4997ffc0176396a6)(0, easing.length, i)] : easing;\n}\n\n\nconst $c39040460f3b0b9e$export$7d15b64cf5a3a4c4 = (min, max, v)=>Math.min(Math.max(v, min), max);\n\n\nfunction $f9be231e4d7a00b5$export$89e29e4ab65e70a9(output, input = (0, $9b3af257d77590ba$export$24dbcec0b26e6d9d)(output.length), easing = (0, $a9ec4c6371c8c8ef$export$ea6e51872ab1b721)) {\n    const length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */ const remainder = length - input.length;\n    remainder > 0 && (0, $9b3af257d77590ba$export$dafee61230cf05c6)(input, remainder);\n    return (t)=>{\n        let i = 0;\n        for(; i < length - 2; i++){\n            if (t < input[i + 1]) break;\n        }\n        let progressInRange = (0, $c39040460f3b0b9e$export$7d15b64cf5a3a4c4)(0, 1, (0, $b5fe3643ba3c2da8$export$504d7abb21fa8c9)(input[i], input[i + 1], t));\n        const segmentEasing = (0, $e7e8fb4e721c4127$export$41c5e731255a462)(easing, i);\n        progressInRange = segmentEasing(progressInRange);\n        return (0, $26fc349e92d9489e$export$2c9e8a9632a706b2)(output[i], output[i + 1], progressInRange);\n    };\n}\n\nconst $c0efdae2be78a137$export$d81a3021299cadf2 = (easing)=>typeof easing === \"object\" && Boolean(easing.createAnimation);\n\n\n\n/*\n  Bezier function generator\n\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/ // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst $0c9f2a04764915a5$var$calcBezier = (t, a1, a2)=>(((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;\nconst $0c9f2a04764915a5$var$subdivisionPrecision = 0.0000001;\nconst $0c9f2a04764915a5$var$subdivisionMaxIterations = 12;\nfunction $0c9f2a04764915a5$var$binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = $0c9f2a04764915a5$var$calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) upperBound = currentT;\n        else lowerBound = currentT;\n    }while (Math.abs(currentX) > $0c9f2a04764915a5$var$subdivisionPrecision && ++i < $0c9f2a04764915a5$var$subdivisionMaxIterations);\n    return currentT;\n}\nfunction $0c9f2a04764915a5$export$2c575fa1d20488bd(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2) return 0, $a9ec4c6371c8c8ef$export$ea6e51872ab1b721;\n    const getTForX = (aX)=>$0c9f2a04764915a5$var$binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t)=>t === 0 || t === 1 ? t : $0c9f2a04764915a5$var$calcBezier(getTForX(t), mY1, mY2);\n}\n\n\nconst $fecf794dcc504830$export$be3f796aed065412 = (steps, direction = \"end\")=>(progress)=>{\n        progress = direction === \"end\" ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        const expanded = progress * steps;\n        const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\n        return (0, $c39040460f3b0b9e$export$7d15b64cf5a3a4c4)(0, 1, rounded / steps);\n    };\n\n\n\nconst $ead554a12e40dce0$export$77290801a62f77a2 = (easing)=>Array.isArray(easing) && (0, $2600ec0fa268729d$export$7e4aa119212bc614)(easing[0]);\n\nconst $6a6d195304e4357d$export$f6e2535fb5126e54 = (value)=>typeof value === \"function\";\n\n\nconst $feb0fd98b03164bf$var$namedEasings = {\n    ease: (0, $0c9f2a04764915a5$export$2c575fa1d20488bd)(0.25, 0.1, 0.25, 1.0),\n    \"ease-in\": (0, $0c9f2a04764915a5$export$2c575fa1d20488bd)(0.42, 0.0, 1.0, 1.0),\n    \"ease-in-out\": (0, $0c9f2a04764915a5$export$2c575fa1d20488bd)(0.42, 0.0, 0.58, 1.0),\n    \"ease-out\": (0, $0c9f2a04764915a5$export$2c575fa1d20488bd)(0.0, 0.0, 0.58, 1.0)\n};\nconst $feb0fd98b03164bf$var$functionArgsRegex = /\\((.*?)\\)/;\nfunction $feb0fd98b03164bf$export$9681b459c1c8f0f4(definition) {\n    // If already an easing function, return\n    if ((0, $6a6d195304e4357d$export$f6e2535fb5126e54)(definition)) return definition;\n    // If an easing curve definition, return bezier function\n    if ((0, $ead554a12e40dce0$export$77290801a62f77a2)(definition)) return (0, $0c9f2a04764915a5$export$2c575fa1d20488bd)(...definition);\n    // If we have a predefined easing function, return\n    if ($feb0fd98b03164bf$var$namedEasings[definition]) return $feb0fd98b03164bf$var$namedEasings[definition];\n    // If this is a steps function, attempt to create easing curve\n    if (definition.startsWith(\"steps\")) {\n        const args = $feb0fd98b03164bf$var$functionArgsRegex.exec(definition);\n        if (args) {\n            const argsArray = args[1].split(\",\");\n            return (0, $fecf794dcc504830$export$be3f796aed065412)(parseFloat(argsArray[0]), argsArray[1].trim());\n        }\n    }\n    return 0, $a9ec4c6371c8c8ef$export$ea6e51872ab1b721;\n}\n\n\nclass $77d743c5fbee771c$export$c35d437ae5945fcd {\n    constructor(output, keyframes = [\n        0,\n        1\n    ], { easing: easing, duration: initialDuration = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).duration, delay: delay = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).delay, endDelay: endDelay = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).endDelay, repeat: repeat = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).repeat, offset: offset, direction: direction = \"normal\" } = {}){\n        this.startTime = null;\n        this.rate = 1;\n        this.t = 0;\n        this.cancelTimestamp = null;\n        this.easing = (0, $a9ec4c6371c8c8ef$export$ea6e51872ab1b721);\n        this.duration = 0;\n        this.totalDuration = 0;\n        this.repeat = 0;\n        this.playState = \"idle\";\n        this.finished = new Promise((resolve, reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        easing = easing || (0, $dc2d63b917c60329$export$ebe90cb607ad99e).easing;\n        if ((0, $c0efdae2be78a137$export$d81a3021299cadf2)(easing)) {\n            const custom = easing.createAnimation(keyframes);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            initialDuration = custom.duration || initialDuration;\n        }\n        this.repeat = repeat;\n        this.easing = (0, $0f92e8df025f9218$export$981cc9ef33696dc8)(easing) ? (0, $a9ec4c6371c8c8ef$export$ea6e51872ab1b721) : (0, $feb0fd98b03164bf$export$9681b459c1c8f0f4)(easing);\n        this.updateDuration(initialDuration);\n        const interpolate$1 = (0, $f9be231e4d7a00b5$export$89e29e4ab65e70a9)(keyframes, offset, (0, $0f92e8df025f9218$export$981cc9ef33696dc8)(easing) ? easing.map((0, $feb0fd98b03164bf$export$9681b459c1c8f0f4)) : (0, $a9ec4c6371c8c8ef$export$ea6e51872ab1b721));\n        this.tick = (timestamp)=>{\n            var _a;\n            // TODO: Temporary fix for OptionsResolver typing\n            delay;\n            let t = 0;\n            if (this.pauseTime !== undefined) t = this.pauseTime;\n            else t = (timestamp - this.startTime) * this.rate;\n            this.t = t;\n            // Convert to seconds\n            t /= 1000;\n            // Rebase on delay\n            t = Math.max(t - delay, 0);\n            /**\n             * If this animation has finished, set the current time\n             * to the total duration.\n             */ if (this.playState === \"finished\" && this.pauseTime === undefined) t = this.totalDuration;\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */ const progress = t / this.duration;\n            // TODO progress += iterationStart\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */ let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */ let iterationProgress = progress % 1.0;\n            if (!iterationProgress && progress >= 1) iterationProgress = 1;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */ iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */ const iterationIsOdd = currentIteration % 2;\n            if (direction === \"reverse\" || direction === \"alternate\" && iterationIsOdd || direction === \"alternate-reverse\" && !iterationIsOdd) iterationProgress = 1 - iterationProgress;\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n            const latest = interpolate$1(this.easing(p));\n            output(latest);\n            const isAnimationFinished = this.pauseTime === undefined && (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n            if (isAnimationFinished) {\n                this.playState = \"finished\";\n                (_a = this.resolve) === null || _a === void 0 || _a.call(this, latest);\n            } else if (this.playState !== \"idle\") this.frameRequestId = requestAnimationFrame(this.tick);\n        };\n        this.play();\n    }\n    play() {\n        const now = performance.now();\n        this.playState = \"running\";\n        if (this.pauseTime !== undefined) this.startTime = now - this.pauseTime;\n        else if (!this.startTime) this.startTime = now;\n        this.cancelTimestamp = this.startTime;\n        this.pauseTime = undefined;\n        this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n    pause() {\n        this.playState = \"paused\";\n        this.pauseTime = this.t;\n    }\n    finish() {\n        this.playState = \"finished\";\n        this.tick(0);\n    }\n    stop() {\n        var _a;\n        this.playState = \"idle\";\n        if (this.frameRequestId !== undefined) cancelAnimationFrame(this.frameRequestId);\n        (_a = this.reject) === null || _a === void 0 || _a.call(this, false);\n    }\n    cancel() {\n        this.stop();\n        this.tick(this.cancelTimestamp);\n    }\n    reverse() {\n        this.rate *= -1;\n    }\n    commitStyles() {}\n    updateDuration(duration) {\n        this.duration = duration;\n        this.totalDuration = duration * (this.repeat + 1);\n    }\n    get currentTime() {\n        return this.t;\n    }\n    set currentTime(t) {\n        if (this.pauseTime !== undefined || this.rate === 0) this.pauseTime = t;\n        else this.startTime = performance.now() - t / this.rate;\n    }\n    get playbackRate() {\n        return this.rate;\n    }\n    set playbackRate(rate) {\n        this.rate = rate;\n    }\n}\n\n\nvar $82adf2b309a976d9$export$491112666e282270 = function() {};\nvar $82adf2b309a976d9$export$f5708dca728d7177 = function() {};\n\n\n/**\n * The MotionValue tracks the state of a single animatable\n * value. Currently, updatedAt and current are unused. The\n * long term idea is to use this to minimise the number\n * of DOM reads, and to abstract the DOM interactions here.\n */ class $091e5423bab70e58$export$8cea36d14ee64562 {\n    setAnimation(animation) {\n        this.animation = animation;\n        animation === null || animation === void 0 || animation.finished.then(()=>this.clearAnimation()).catch(()=>{});\n    }\n    clearAnimation() {\n        this.animation = this.generator = undefined;\n    }\n}\n\n\nconst $4ac2d59feaf07851$var$data = new WeakMap();\nfunction $4ac2d59feaf07851$export$213eea93596b44f(element) {\n    if (!$4ac2d59feaf07851$var$data.has(element)) $4ac2d59feaf07851$var$data.set(element, {\n        transforms: [],\n        values: new Map()\n    });\n    return $4ac2d59feaf07851$var$data.get(element);\n}\nfunction $4ac2d59feaf07851$export$c0999ba824977ca6(motionValues, name) {\n    if (!motionValues.has(name)) motionValues.set(name, new (0, $091e5423bab70e58$export$8cea36d14ee64562)());\n    return motionValues.get(name);\n}\n\n\nfunction $2bf1343b4ac164eb$export$20e507e47fae79fd(array, item) {\n    array.indexOf(item) === -1 && array.push(item);\n}\nfunction $2bf1343b4ac164eb$export$fe2d9b4e03920b4c(arr, item) {\n    const index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\n\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */ const $4be6463a6552f378$export$a9a762b9618d4a18 = [\n    \"\",\n    \"X\",\n    \"Y\",\n    \"Z\"\n];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */ const $4be6463a6552f378$var$order = [\n    \"translate\",\n    \"scale\",\n    \"rotate\",\n    \"skew\"\n];\nconst $4be6463a6552f378$export$97b5d3c90609c212 = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\"\n};\nconst $4be6463a6552f378$var$rotation = {\n    syntax: \"<angle>\",\n    initialValue: \"0deg\",\n    toDefaultUnit: (v)=>v + \"deg\"\n};\nconst $4be6463a6552f378$var$baseTransformProperties = {\n    translate: {\n        syntax: \"<length-percentage>\",\n        initialValue: \"0px\",\n        toDefaultUnit: (v)=>v + \"px\"\n    },\n    rotate: $4be6463a6552f378$var$rotation,\n    scale: {\n        syntax: \"<number>\",\n        initialValue: 1,\n        toDefaultUnit: (0, $a9ec4c6371c8c8ef$export$ea6e51872ab1b721)\n    },\n    skew: $4be6463a6552f378$var$rotation\n};\nconst $4be6463a6552f378$export$a9dad2abc3d443d = new Map();\nconst $4be6463a6552f378$export$7bbd29b1fa8b68d4 = (name)=>`--motion-${name}`;\n/**\n * Generate a list of every possible transform key\n */ const $4be6463a6552f378$var$transforms = [\n    \"x\",\n    \"y\",\n    \"z\"\n];\n$4be6463a6552f378$var$order.forEach((name)=>{\n    $4be6463a6552f378$export$a9a762b9618d4a18.forEach((axis)=>{\n        $4be6463a6552f378$var$transforms.push(name + axis);\n        $4be6463a6552f378$export$a9dad2abc3d443d.set($4be6463a6552f378$export$7bbd29b1fa8b68d4(name + axis), $4be6463a6552f378$var$baseTransformProperties[name]);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */ const $4be6463a6552f378$export$11410fe03e8c4042 = (a, b)=>$4be6463a6552f378$var$transforms.indexOf(a) - $4be6463a6552f378$var$transforms.indexOf(b);\n/**\n * Provide a quick way to check if a string is the name of a transform\n */ const $4be6463a6552f378$var$transformLookup = new Set($4be6463a6552f378$var$transforms);\nconst $4be6463a6552f378$export$8a546e9da811625d = (name)=>$4be6463a6552f378$var$transformLookup.has(name);\nconst $4be6463a6552f378$export$40eba1f1af915c93 = (element, name)=>{\n    // Map x to translateX etc\n    if ($4be6463a6552f378$export$97b5d3c90609c212[name]) name = $4be6463a6552f378$export$97b5d3c90609c212[name];\n    const { transforms: transforms } = (0, $4ac2d59feaf07851$export$213eea93596b44f)(element);\n    (0, $2bf1343b4ac164eb$export$20e507e47fae79fd)(transforms, name);\n    /**\n     * TODO: An optimisation here could be to cache the transform in element data\n     * and only update if this has changed.\n     */ element.style.transform = $4be6463a6552f378$export$785216816cb6f870(transforms);\n};\nconst $4be6463a6552f378$export$785216816cb6f870 = (transforms)=>transforms.sort($4be6463a6552f378$export$11410fe03e8c4042).reduce($4be6463a6552f378$var$transformListToString, \"\").trim();\nconst $4be6463a6552f378$var$transformListToString = (template, name)=>`${template} ${name}(var(${$4be6463a6552f378$export$7bbd29b1fa8b68d4(name)}))`;\n\n\nconst $ccd27e317ff74620$export$30a9abfd5fb9f5f6 = (name)=>name.startsWith(\"--\");\nconst $ccd27e317ff74620$export$7a740cb9e3dd106d = new Set();\nfunction $ccd27e317ff74620$export$9fdd8c2f6f59adb0(name) {\n    if ($ccd27e317ff74620$export$7a740cb9e3dd106d.has(name)) return;\n    $ccd27e317ff74620$export$7a740cb9e3dd106d.add(name);\n    try {\n        const { syntax: syntax, initialValue: initialValue } = (0, $4be6463a6552f378$export$a9dad2abc3d443d).has(name) ? (0, $4be6463a6552f378$export$a9dad2abc3d443d).get(name) : {};\n        CSS.registerProperty({\n            name: name,\n            inherits: false,\n            syntax: syntax,\n            initialValue: initialValue\n        });\n    } catch (e) {}\n}\n\n\nconst $b41dbcd6c6617a69$export$2da9be4cfdb689b1 = {\n    ms: (seconds)=>seconds * 1000,\n    s: (milliseconds)=>milliseconds / 1000\n};\n\n\n\n\nconst $15b73f7aeef5597f$var$testAnimation = (keyframes, options)=>document.createElement(\"div\").animate(keyframes, options);\nconst $15b73f7aeef5597f$var$featureTests = {\n    cssRegisterProperty: ()=>typeof CSS !== \"undefined\" && Object.hasOwnProperty.call(CSS, \"registerProperty\"),\n    waapi: ()=>Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n    partialKeyframes: ()=>{\n        try {\n            $15b73f7aeef5597f$var$testAnimation({\n                opacity: [\n                    1\n                ]\n            });\n        } catch (e) {\n            return false;\n        }\n        return true;\n    },\n    finished: ()=>Boolean($15b73f7aeef5597f$var$testAnimation({\n            opacity: [\n                0,\n                1\n            ]\n        }, {\n            duration: 0.001\n        }).finished),\n    linearEasing: ()=>{\n        try {\n            $15b73f7aeef5597f$var$testAnimation({\n                opacity: 0\n            }, {\n                easing: \"linear(0, 1)\"\n            });\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n};\nconst $15b73f7aeef5597f$var$results = {};\nconst $15b73f7aeef5597f$export$cde6a56f9669daf6 = {};\nfor(const key in $15b73f7aeef5597f$var$featureTests)$15b73f7aeef5597f$export$cde6a56f9669daf6[key] = ()=>{\n    if ($15b73f7aeef5597f$var$results[key] === undefined) $15b73f7aeef5597f$var$results[key] = $15b73f7aeef5597f$var$featureTests[key]();\n    return $15b73f7aeef5597f$var$results[key];\n};\n\n\n// Create a linear easing point for every x second\nconst $b177fba31032c2b0$var$resolution = 0.015;\nconst $b177fba31032c2b0$export$a74bbb7e96c8ced4 = (easing, duration)=>{\n    let points = \"\";\n    const numPoints = Math.round(duration / $b177fba31032c2b0$var$resolution);\n    for(let i = 0; i < numPoints; i++)points += easing((0, $b5fe3643ba3c2da8$export$504d7abb21fa8c9)(0, numPoints - 1, i)) + \", \";\n    return points.substring(0, points.length - 2);\n};\nconst $b177fba31032c2b0$export$284d1118c33f9836 = (easing, duration)=>{\n    if ((0, $6a6d195304e4357d$export$f6e2535fb5126e54)(easing)) return (0, $15b73f7aeef5597f$export$cde6a56f9669daf6).linearEasing() ? `linear(${$b177fba31032c2b0$export$a74bbb7e96c8ced4(easing, duration)})` : (0, $dc2d63b917c60329$export$ebe90cb607ad99e).easing;\n    else return (0, $ead554a12e40dce0$export$77290801a62f77a2)(easing) ? $b177fba31032c2b0$export$2523b8f0bd8f44cb(easing) : easing;\n};\nconst $b177fba31032c2b0$export$2523b8f0bd8f44cb = ([a, b, c, d])=>`cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\n\n\nfunction $330ddc5eb9100e1b$export$3d2f5b3e7004e0cf(keyframes, readInitialValue) {\n    for(let i = 0; i < keyframes.length; i++)if (keyframes[i] === null) keyframes[i] = i ? keyframes[i - 1] : readInitialValue();\n    return keyframes;\n}\nconst $330ddc5eb9100e1b$export$388e66a97327a012 = (keyframes)=>Array.isArray(keyframes) ? keyframes : [\n        keyframes\n    ];\n\n\n\n\nfunction $14b715416518df98$export$b6557f397a74f857(key) {\n    if ((0, $4be6463a6552f378$export$97b5d3c90609c212)[key]) key = (0, $4be6463a6552f378$export$97b5d3c90609c212)[key];\n    return (0, $4be6463a6552f378$export$8a546e9da811625d)(key) ? (0, $4be6463a6552f378$export$7bbd29b1fa8b68d4)(key) : key;\n}\n\n\n\nconst $c78e3a46d208c382$export$1d567c320f4763bc = {\n    get: (element, name)=>{\n        name = (0, $14b715416518df98$export$b6557f397a74f857)(name);\n        let value = (0, $ccd27e317ff74620$export$30a9abfd5fb9f5f6)(name) ? element.style.getPropertyValue(name) : getComputedStyle(element)[name];\n        if (!value && value !== 0) {\n            const definition = (0, $4be6463a6552f378$export$a9dad2abc3d443d).get(name);\n            if (definition) value = definition.initialValue;\n        }\n        return value;\n    },\n    set: (element, name, value)=>{\n        name = (0, $14b715416518df98$export$b6557f397a74f857)(name);\n        if ((0, $ccd27e317ff74620$export$30a9abfd5fb9f5f6)(name)) element.style.setProperty(name, value);\n        else element.style[name] = value;\n    }\n};\n\n\n\nfunction $2b08528401504e63$export$3cc6f911ef1fd837(animation, needsCommit = true) {\n    if (!animation || animation.playState === \"finished\") return;\n    // Suppress error thrown by WAAPI\n    try {\n        if (animation.stop) animation.stop();\n        else {\n            needsCommit && animation.commitStyles();\n            animation.cancel();\n        }\n    } catch (e) {}\n}\n\n\nconst $1ec475b080df4cc4$export$844ec244b1367d54 = (value)=>typeof value === \"string\";\n\n\nfunction $bf7f460c325e3a7a$export$4bcf070800a2fd35(keyframes, definition) {\n    var _a;\n    let toUnit = (definition === null || definition === void 0 ? void 0 : definition.toDefaultUnit) || (0, $a9ec4c6371c8c8ef$export$ea6e51872ab1b721);\n    const finalKeyframe = keyframes[keyframes.length - 1];\n    if ((0, $1ec475b080df4cc4$export$844ec244b1367d54)(finalKeyframe)) {\n        const unit = ((_a = finalKeyframe.match(/(-?[\\d.]+)([a-z%]*)/)) === null || _a === void 0 ? void 0 : _a[2]) || \"\";\n        if (unit) toUnit = (value)=>value + unit;\n    }\n    return toUnit;\n}\n\n\nfunction $9ef3fcdee5d7d99d$var$getDevToolsRecord() {\n    return window.__MOTION_DEV_TOOLS_RECORD;\n}\nfunction $9ef3fcdee5d7d99d$export$c76cd972d26986f9(element, key, keyframesDefinition, options = {}, AnimationPolyfill) {\n    const record = $9ef3fcdee5d7d99d$var$getDevToolsRecord();\n    const isRecording = options.record !== false && record;\n    let animation;\n    let { duration: duration = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).duration, delay: delay = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).delay, endDelay: endDelay = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).endDelay, repeat: repeat = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).repeat, easing: easing = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).easing, persist: persist = false, direction: direction, offset: offset, allowWebkitAcceleration: allowWebkitAcceleration = false } = options;\n    const data = (0, $4ac2d59feaf07851$export$213eea93596b44f)(element);\n    const valueIsTransform = (0, $4be6463a6552f378$export$8a546e9da811625d)(key);\n    let canAnimateNatively = (0, $15b73f7aeef5597f$export$cde6a56f9669daf6).waapi();\n    /**\n     * If this is an individual transform, we need to map its\n     * key to a CSS variable and update the element's transform style\n     */ valueIsTransform && (0, $4be6463a6552f378$export$40eba1f1af915c93)(element, key);\n    const name = (0, $14b715416518df98$export$b6557f397a74f857)(key);\n    const motionValue = (0, $4ac2d59feaf07851$export$c0999ba824977ca6)(data.values, name);\n    /**\n     * Get definition of value, this will be used to convert numerical\n     * keyframes into the default value type.\n     */ const definition = (0, $4be6463a6552f378$export$a9dad2abc3d443d).get(name);\n    /**\n     * Stop the current animation, if any. Because this will trigger\n     * commitStyles (DOM writes) and we might later trigger DOM reads,\n     * this is fired now and we return a factory function to create\n     * the actual animation that can get called in batch,\n     */ (0, $2b08528401504e63$export$3cc6f911ef1fd837)(motionValue.animation, !((0, $c0efdae2be78a137$export$d81a3021299cadf2)(easing) && motionValue.generator) && options.record !== false);\n    /**\n     * Batchable factory function containing all DOM reads.\n     */ return ()=>{\n        const readInitialValue = ()=>{\n            var _a, _b;\n            return (_b = (_a = (0, $c78e3a46d208c382$export$1d567c320f4763bc).get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0;\n        };\n        /**\n         * Replace null values with the previous keyframe value, or read\n         * it from the DOM if it's the first keyframe.\n         */ let keyframes = (0, $330ddc5eb9100e1b$export$3d2f5b3e7004e0cf)((0, $330ddc5eb9100e1b$export$388e66a97327a012)(keyframesDefinition), readInitialValue);\n        /**\n         * Detect unit type of keyframes.\n         */ const toUnit = (0, $bf7f460c325e3a7a$export$4bcf070800a2fd35)(keyframes, definition);\n        if ((0, $c0efdae2be78a137$export$d81a3021299cadf2)(easing)) {\n            const custom = easing.createAnimation(keyframes, key !== \"opacity\", readInitialValue, name, motionValue);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            duration = custom.duration || duration;\n        }\n        /**\n         * If this is a CSS variable we need to register it with the browser\n         * before it can be animated natively. We also set it with setProperty\n         * rather than directly onto the element.style object.\n         */ if ((0, $ccd27e317ff74620$export$30a9abfd5fb9f5f6)(name)) {\n            if ((0, $15b73f7aeef5597f$export$cde6a56f9669daf6).cssRegisterProperty()) (0, $ccd27e317ff74620$export$9fdd8c2f6f59adb0)(name);\n            else canAnimateNatively = false;\n        }\n        /**\n         * If we've been passed a custom easing function, and this browser\n         * does **not** support linear() easing, and the value is a transform\n         * (and thus a pure number) we can still support the custom easing\n         * by falling back to the animation polyfill.\n         */ if (valueIsTransform && !(0, $15b73f7aeef5597f$export$cde6a56f9669daf6).linearEasing() && ((0, $6a6d195304e4357d$export$f6e2535fb5126e54)(easing) || (0, $0f92e8df025f9218$export$981cc9ef33696dc8)(easing) && easing.some((0, $6a6d195304e4357d$export$f6e2535fb5126e54)))) canAnimateNatively = false;\n        /**\n         * If we can animate this value with WAAPI, do so.\n         */ if (canAnimateNatively) {\n            /**\n             * Convert numbers to default value types. Currently this only supports\n             * transforms but it could also support other value types.\n             */ if (definition) keyframes = keyframes.map((value)=>(0, $2600ec0fa268729d$export$7e4aa119212bc614)(value) ? definition.toDefaultUnit(value) : value);\n            /**\n             * If this browser doesn't support partial/implicit keyframes we need to\n             * explicitly provide one.\n             */ if (keyframes.length === 1 && (!(0, $15b73f7aeef5597f$export$cde6a56f9669daf6).partialKeyframes() || isRecording)) keyframes.unshift(readInitialValue());\n            const animationOptions = {\n                delay: (0, $b41dbcd6c6617a69$export$2da9be4cfdb689b1).ms(delay),\n                duration: (0, $b41dbcd6c6617a69$export$2da9be4cfdb689b1).ms(duration),\n                endDelay: (0, $b41dbcd6c6617a69$export$2da9be4cfdb689b1).ms(endDelay),\n                easing: !(0, $0f92e8df025f9218$export$981cc9ef33696dc8)(easing) ? (0, $b177fba31032c2b0$export$284d1118c33f9836)(easing, duration) : undefined,\n                direction: direction,\n                iterations: repeat + 1,\n                fill: \"both\"\n            };\n            animation = element.animate({\n                [name]: keyframes,\n                offset: offset,\n                easing: (0, $0f92e8df025f9218$export$981cc9ef33696dc8)(easing) ? easing.map((thisEasing)=>(0, $b177fba31032c2b0$export$284d1118c33f9836)(thisEasing, duration)) : undefined\n            }, animationOptions);\n            /**\n             * Polyfill finished Promise in browsers that don't support it\n             */ if (!animation.finished) animation.finished = new Promise((resolve, reject)=>{\n                animation.onfinish = resolve;\n                animation.oncancel = reject;\n            });\n            const target = keyframes[keyframes.length - 1];\n            animation.finished.then(()=>{\n                if (persist) return;\n                // Apply styles to target\n                (0, $c78e3a46d208c382$export$1d567c320f4763bc).set(element, name, target);\n                // Ensure fill modes don't persist\n                animation.cancel();\n            }).catch((0, $a9ec4c6371c8c8ef$export$8793edee2d425525));\n            /**\n             * This forces Webkit to run animations on the main thread by exploiting\n             * this condition:\n             * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099\n             *\n             * This fixes Webkit's timing bugs, like accelerated animations falling\n             * out of sync with main thread animations and massive delays in starting\n             * accelerated animations in WKWebView.\n             */ if (!allowWebkitAcceleration) animation.playbackRate = 1.000001;\n        /**\n             * If we can't animate the value natively then we can fallback to the numbers-only\n             * polyfill for transforms.\n             */ } else if (AnimationPolyfill && valueIsTransform) {\n            /**\n             * If any keyframe is a string (because we measured it from the DOM), we need to convert\n             * it into a number before passing to the Animation polyfill.\n             */ keyframes = keyframes.map((value)=>typeof value === \"string\" ? parseFloat(value) : value);\n            /**\n             * If we only have a single keyframe, we need to create an initial keyframe by reading\n             * the current value from the DOM.\n             */ if (keyframes.length === 1) keyframes.unshift(parseFloat(readInitialValue()));\n            animation = new AnimationPolyfill((latest)=>{\n                (0, $c78e3a46d208c382$export$1d567c320f4763bc).set(element, name, toUnit ? toUnit(latest) : latest);\n            }, keyframes, Object.assign(Object.assign({}, options), {\n                duration: duration,\n                easing: easing\n            }));\n        } else {\n            const target = keyframes[keyframes.length - 1];\n            (0, $c78e3a46d208c382$export$1d567c320f4763bc).set(element, name, definition && (0, $2600ec0fa268729d$export$7e4aa119212bc614)(target) ? definition.toDefaultUnit(target) : target);\n        }\n        if (isRecording) record(element, key, keyframes, {\n            duration: duration,\n            delay: delay,\n            easing: easing,\n            repeat: repeat,\n            offset: offset\n        }, \"motion-one\");\n        motionValue.setAnimation(animation);\n        return animation;\n    };\n}\n\n\nconst $57d7e8b2ef7ce651$export$d2312e68e1f5ad00 = (options, key)=>/**\n * TODO: Make test for this\n * Always return a new object otherwise delay is overwritten by results of stagger\n * and this results in no stagger\n */ options[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options);\n\n\nfunction $b9a28f0b498c113a$export$90ceba2564a894f8(elements, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : selectorCache[elements] = document.querySelectorAll(elements);\n            elements = selectorCache[elements];\n        } else elements = document.querySelectorAll(elements);\n    } else if (elements instanceof Element) elements = [\n        elements\n    ];\n    /**\n     * Return an empty array\n     */ return Array.from(elements || []);\n}\n\n\n\n\nconst $ff34fe8b644280e4$var$createAnimation = (factory)=>factory();\nconst $ff34fe8b644280e4$export$c5e4bb50450218c1 = (animationFactory, options, duration = (0, $dc2d63b917c60329$export$ebe90cb607ad99e).duration)=>{\n    return new Proxy({\n        animations: animationFactory.map($ff34fe8b644280e4$var$createAnimation).filter(Boolean),\n        duration: duration,\n        options: options\n    }, $ff34fe8b644280e4$export$cc1adf6fb659c762);\n};\n/**\n * TODO:\n * Currently this returns the first animation, ideally it would return\n * the first active animation.\n */ const $ff34fe8b644280e4$var$getActiveAnimation = (state)=>state.animations[0];\nconst $ff34fe8b644280e4$export$cc1adf6fb659c762 = {\n    get: (target, key)=>{\n        const activeAnimation = $ff34fe8b644280e4$var$getActiveAnimation(target);\n        switch(key){\n            case \"duration\":\n                return target.duration;\n            case \"currentTime\":\n                return (0, $b41dbcd6c6617a69$export$2da9be4cfdb689b1).s((activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0);\n            case \"playbackRate\":\n            case \"playState\":\n                return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];\n            case \"finished\":\n                if (!target.finished) target.finished = Promise.all(target.animations.map($ff34fe8b644280e4$var$selectFinished)).catch((0, $a9ec4c6371c8c8ef$export$8793edee2d425525));\n                return target.finished;\n            case \"stop\":\n                return ()=>{\n                    target.animations.forEach((animation)=>(0, $2b08528401504e63$export$3cc6f911ef1fd837)(animation));\n                };\n            case \"forEachNative\":\n                /**\n                 * This is for internal use only, fire a callback for each\n                 * underlying animation.\n                 */ return (callback)=>{\n                    target.animations.forEach((animation)=>callback(animation, target));\n                };\n            default:\n                return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === \"undefined\" ? undefined : ()=>target.animations.forEach((animation)=>animation[key]());\n        }\n    },\n    set: (target, key, value)=>{\n        switch(key){\n            case \"currentTime\":\n                value = (0, $b41dbcd6c6617a69$export$2da9be4cfdb689b1).ms(value);\n            // Fall-through\n            case \"playbackRate\":\n                for(let i = 0; i < target.animations.length; i++)target.animations[i][key] = value;\n                return true;\n        }\n        return false;\n    }\n};\nconst $ff34fe8b644280e4$var$selectFinished = (animation)=>animation.finished;\n\n\n\n\nfunction $98bb634993f4306d$export$ef0b4d89074db4d0(duration = 0.1, { start: start = 0, from: from = 0, easing: easing } = {}) {\n    return (i, total)=>{\n        const fromIndex = (0, $2600ec0fa268729d$export$7e4aa119212bc614)(from) ? from : $98bb634993f4306d$export$a7952f4918e96441(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (easing) {\n            const maxDelay = total * duration;\n            const easingFunction = (0, $feb0fd98b03164bf$export$9681b459c1c8f0f4)(easing);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return start + delay;\n    };\n}\nfunction $98bb634993f4306d$export$a7952f4918e96441(from, total) {\n    if (from === \"first\") return 0;\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction $98bb634993f4306d$export$4cf8f03b86be8175(option, i, total) {\n    return (0, $6a6d195304e4357d$export$f6e2535fb5126e54)(option) ? option(i, total) : option;\n}\n\n\nfunction $e9a68bb46f2fff46$export$2a47ca22dbf0bb08(AnimatePolyfill) {\n    return function animate(elements, keyframes, options = {}) {\n        elements = (0, $b9a28f0b498c113a$export$90ceba2564a894f8)(elements);\n        const numElements = elements.length;\n        (0, $82adf2b309a976d9$export$f5708dca728d7177)(Boolean(numElements), \"No valid element provided.\");\n        (0, $82adf2b309a976d9$export$f5708dca728d7177)(Boolean(keyframes), \"No keyframes defined.\");\n        /**\n         * Create and start new animations\n         */ const animationFactories = [];\n        for(let i = 0; i < numElements; i++){\n            const element = elements[i];\n            for(const key in keyframes){\n                const valueOptions = (0, $57d7e8b2ef7ce651$export$d2312e68e1f5ad00)(options, key);\n                valueOptions.delay = (0, $98bb634993f4306d$export$4cf8f03b86be8175)(valueOptions.delay, i, numElements);\n                const animation = (0, $9ef3fcdee5d7d99d$export$c76cd972d26986f9)(element, key, keyframes[key], valueOptions, AnimatePolyfill);\n                animationFactories.push(animation);\n            }\n        }\n        return (0, $ff34fe8b644280e4$export$c5e4bb50450218c1)(animationFactories, options, /**\n         * TODO:\n         * If easing is set to spring or glide, duration will be dynamically\n         * generated. Ideally we would dynamically generate this from\n         * animation.effect.getComputedTiming().duration but this isn't\n         * supported in iOS13 or our number polyfill. Perhaps it's possible\n         * to Proxy animations returned from animateStyle that has duration\n         * as a getter.\n         */ options.duration);\n    };\n}\n\n\nconst $8c32d4e44fcce1d2$export$e3607ec2d7a891c4 = (0, $e9a68bb46f2fff46$export$2a47ca22dbf0bb08)((0, $77d743c5fbee771c$export$c35d437ae5945fcd));\n\n\n\n\nfunction $e7dee9a46833b703$export$290670472807ab5b(target, options = {}) {\n    return (0, $ff34fe8b644280e4$export$c5e4bb50450218c1)([\n        ()=>{\n            const animation = new (0, $77d743c5fbee771c$export$c35d437ae5945fcd)(target, [\n                0,\n                1\n            ], options);\n            animation.finished.catch(()=>{});\n            return animation;\n        }\n    ], options, options.duration);\n}\nfunction $e7dee9a46833b703$export$e3607ec2d7a891c4(target, keyframesOrOptions, options) {\n    const factory = (0, $6a6d195304e4357d$export$f6e2535fb5126e54)(target) ? $e7dee9a46833b703$export$290670472807ab5b : (0, $8c32d4e44fcce1d2$export$e3607ec2d7a891c4);\n    return factory(target, keyframesOrOptions, options);\n}\n\n\n\nconst $983dfce98d47352b$var$thresholds = {\n    any: 0,\n    all: 1\n};\nfunction $983dfce98d47352b$export$acb1e9cb9ce4ca56(elementOrSelector, onStart, { root: root, margin: rootMargin, amount: amount = \"any\" } = {}) {\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */ if (typeof IntersectionObserver === \"undefined\") return ()=>{};\n    const elements = (0, $b9a28f0b498c113a$export$90ceba2564a894f8)(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries)=>{\n        entries.forEach((entry)=>{\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */ if (entry.isIntersecting === Boolean(onEnd)) return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if ((0, $6a6d195304e4357d$export$f6e2535fb5126e54)(newOnEnd)) activeIntersections.set(entry.target, newOnEnd);\n                else observer.unobserve(entry.target);\n            } else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: typeof amount === \"number\" ? amount : $983dfce98d47352b$var$thresholds[amount]\n    });\n    elements.forEach((element)=>observer.observe(element));\n    return ()=>observer.disconnect();\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var $c106e002a49a00cb$var$extendStatics = function(d, b) {\n    $c106e002a49a00cb$var$extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return $c106e002a49a00cb$var$extendStatics(d, b);\n};\nfunction $c106e002a49a00cb$export$a8ba968b8961cb8a(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    $c106e002a49a00cb$var$extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar $c106e002a49a00cb$export$18ce0697a983be9b = function() {\n    $c106e002a49a00cb$export$18ce0697a983be9b = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $c106e002a49a00cb$export$18ce0697a983be9b.apply(this, arguments);\n};\nfunction $c106e002a49a00cb$export$3c9a16f847548506(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") {\n        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction $c106e002a49a00cb$export$29e00dfd3077644b(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction $c106e002a49a00cb$export$d5ad3fd78186038f(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction $c106e002a49a00cb$export$3a84e1ae4e97e9b0(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n}\nfunction $c106e002a49a00cb$export$d831c04e792af3d(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    return useValue ? value : void 0;\n}\nfunction $c106e002a49a00cb$export$6a2a36740a146cb8(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\nfunction $c106e002a49a00cb$export$d1a06452d3489bc7(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n}\nfunction $c106e002a49a00cb$export$f1db080c865becb9(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction $c106e002a49a00cb$export$1050f835b63b671e(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction $c106e002a49a00cb$export$67ebef60e6f28a6(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar $c106e002a49a00cb$export$45d3717a4c69092e = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction $c106e002a49a00cb$export$f33643c0debef087(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) $c106e002a49a00cb$export$45d3717a4c69092e(o, m, p);\n}\nfunction $c106e002a49a00cb$export$19a8beecd37a4c45(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction $c106e002a49a00cb$export$8d051b38c9118094(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction $c106e002a49a00cb$export$afc72e2116322959() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat($c106e002a49a00cb$export$8d051b38c9118094(arguments[i]));\n    return ar;\n}\nfunction $c106e002a49a00cb$export$6388937ca91ccae8() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction $c106e002a49a00cb$export$1216008129fb82ed(to, from, pack) {\n    if (pack || arguments.length === 2) {\n        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction $c106e002a49a00cb$export$10c90e4f7922046c(v) {\n    return this instanceof $c106e002a49a00cb$export$10c90e4f7922046c ? (this.v = v, this) : new $c106e002a49a00cb$export$10c90e4f7922046c(v);\n}\nfunction $c106e002a49a00cb$export$e427f37a30a4de9b(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $c106e002a49a00cb$export$10c90e4f7922046c ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction $c106e002a49a00cb$export$bbd80228419bb833(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: $c106e002a49a00cb$export$10c90e4f7922046c(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction $c106e002a49a00cb$export$e3b29a3d6162315f(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof $c106e002a49a00cb$export$19a8beecd37a4c45 === \"function\" ? $c106e002a49a00cb$export$19a8beecd37a4c45(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction $c106e002a49a00cb$export$4fb47efe1390b86f(cooked, raw) {\n    if (Object.defineProperty) Object.defineProperty(cooked, \"raw\", {\n        value: raw\n    });\n    else cooked.raw = raw;\n    return cooked;\n}\nvar $c106e002a49a00cb$var$__setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nfunction $c106e002a49a00cb$export$c21735bcef00d192(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) $c106e002a49a00cb$export$45d3717a4c69092e(result, mod, k);\n    }\n    $c106e002a49a00cb$var$__setModuleDefault(result, mod);\n    return result;\n}\nfunction $c106e002a49a00cb$export$da59b14a69baef04(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction $c106e002a49a00cb$export$d5dcaf168c640c35(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction $c106e002a49a00cb$export$d40a35129aaff81f(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction $c106e002a49a00cb$export$81fdc39f203e4e04(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction $c106e002a49a00cb$export$88ac25d8e944e405(env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        env.stack.push({\n            value: value,\n            dispose: dispose,\n            async: async\n        });\n    } else if (async) env.stack.push({\n        async: true\n    });\n    return value;\n}\nvar $c106e002a49a00cb$var$_SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction $c106e002a49a00cb$export$8f076105dc360e92(env) {\n    function fail(e) {\n        env.error = env.hasError ? new $c106e002a49a00cb$var$_SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n    }\n    function next() {\n        while(env.stack.length){\n            var rec = env.stack.pop();\n            try {\n                var result = rec.dispose && rec.dispose.call(rec.value);\n                if (rec.async) return Promise.resolve(result).then(next, function(e) {\n                    fail(e);\n                    return next();\n                });\n            } catch (e) {\n                fail(e);\n            }\n        }\n        if (env.hasError) throw env.error;\n    }\n    return next();\n}\nvar $c106e002a49a00cb$export$2e2bcd8739ae039 = {\n    __extends: $c106e002a49a00cb$export$a8ba968b8961cb8a,\n    __assign: $c106e002a49a00cb$export$18ce0697a983be9b,\n    __rest: $c106e002a49a00cb$export$3c9a16f847548506,\n    __decorate: $c106e002a49a00cb$export$29e00dfd3077644b,\n    __param: $c106e002a49a00cb$export$d5ad3fd78186038f,\n    __metadata: $c106e002a49a00cb$export$f1db080c865becb9,\n    __awaiter: $c106e002a49a00cb$export$1050f835b63b671e,\n    __generator: $c106e002a49a00cb$export$67ebef60e6f28a6,\n    __createBinding: $c106e002a49a00cb$export$45d3717a4c69092e,\n    __exportStar: $c106e002a49a00cb$export$f33643c0debef087,\n    __values: $c106e002a49a00cb$export$19a8beecd37a4c45,\n    __read: $c106e002a49a00cb$export$8d051b38c9118094,\n    __spread: $c106e002a49a00cb$export$afc72e2116322959,\n    __spreadArrays: $c106e002a49a00cb$export$6388937ca91ccae8,\n    __spreadArray: $c106e002a49a00cb$export$1216008129fb82ed,\n    __await: $c106e002a49a00cb$export$10c90e4f7922046c,\n    __asyncGenerator: $c106e002a49a00cb$export$e427f37a30a4de9b,\n    __asyncDelegator: $c106e002a49a00cb$export$bbd80228419bb833,\n    __asyncValues: $c106e002a49a00cb$export$e3b29a3d6162315f,\n    __makeTemplateObject: $c106e002a49a00cb$export$4fb47efe1390b86f,\n    __importStar: $c106e002a49a00cb$export$c21735bcef00d192,\n    __importDefault: $c106e002a49a00cb$export$da59b14a69baef04,\n    __classPrivateFieldGet: $c106e002a49a00cb$export$d5dcaf168c640c35,\n    __classPrivateFieldSet: $c106e002a49a00cb$export$d40a35129aaff81f,\n    __classPrivateFieldIn: $c106e002a49a00cb$export$81fdc39f203e4e04,\n    __addDisposableResource: $c106e002a49a00cb$export$88ac25d8e944e405,\n    __disposeResources: $c106e002a49a00cb$export$8f076105dc360e92\n};\n\n\n\n\n\n\n\n\n\n\n\nfunction $e48181ba352d1ccf$export$83ccd85155ba9791(current, next, prev, labels) {\n    var _a;\n    if ((0, $2600ec0fa268729d$export$7e4aa119212bc614)(next)) return next;\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) return Math.max(0, current + parseFloat(next));\n    else if (next === \"<\") return prev;\n    else return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n}\n\n\n\nfunction $b8308a889cc84729$export$6f93cdbb78924b88(sequence, startTime, endTime) {\n    for(let i = 0; i < sequence.length; i++){\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            (0, $2bf1343b4ac164eb$export$fe2d9b4e03920b4c)(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction $b8308a889cc84729$export$89dfa6760a9f76e7(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */ $b8308a889cc84729$export$6f93cdbb78924b88(sequence, startTime, endTime);\n    for(let i = 0; i < keyframes.length; i++)sequence.push({\n        value: keyframes[i],\n        at: (0, $26fc349e92d9489e$export$2c9e8a9632a706b2)(startTime, endTime, offset[i]),\n        easing: (0, $e7e8fb4e721c4127$export$41c5e731255a462)(easing, i)\n    });\n}\n\n\nfunction $184029bcb6b17be4$export$66dd3fbf44e05bd9(a, b) {\n    if (a.at === b.at) return a.value === null ? 1 : -1;\n    else return a.at - b.at;\n}\n\n\n\nfunction $68afdcc30aeb6706$export$cddc5598d4bb8461(definition, options = {}) {\n    var _a;\n    const animationDefinitions = $68afdcc30aeb6706$export$ecf4a6d05c8cfe84(definition, options);\n    /**\n     * Create and start animations\n     */ const animationFactories = animationDefinitions.map((definition)=>(0, $9ef3fcdee5d7d99d$export$c76cd972d26986f9)(...definition, (0, $77d743c5fbee771c$export$c35d437ae5945fcd))).filter(Boolean);\n    return (0, $ff34fe8b644280e4$export$c5e4bb50450218c1)(animationFactories, options, // Get the duration from the first animation definition\n    (_a = animationDefinitions[0]) === null || _a === void 0 ? void 0 : _a[3].duration);\n}\nfunction $68afdcc30aeb6706$export$ecf4a6d05c8cfe84(definition, _a = {}) {\n    var { defaultOptions: defaultOptions = {} } = _a, timelineOptions = (0, $c106e002a49a00cb$export$3c9a16f847548506)(_a, [\n        \"defaultOptions\"\n    ]);\n    const animationDefinitions = [];\n    const elementSequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the definition array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */ for(let i = 0; i < definition.length; i++){\n        const segment = definition[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */ if ((0, $1ec475b080df4cc4$export$844ec244b1367d54)(segment)) {\n            timeLabels.set(segment, currentTime);\n            continue;\n        } else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, (0, $e48181ba352d1ccf$export$83ccd85155ba9791)(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        const [elementDefinition, keyframes, options = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */ if (options.at !== undefined) currentTime = (0, $e48181ba352d1ccf$export$83ccd85155ba9791)(currentTime, options.at, prevTime, timeLabels);\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */ let maxDuration = 0;\n        /**\n         * Find all the elements specified in the definition and parse value\n         * keyframes from their timeline definitions.\n         */ const elements = (0, $b9a28f0b498c113a$export$90ceba2564a894f8)(elementDefinition, elementCache);\n        const numElements = elements.length;\n        for(let elementIndex = 0; elementIndex < numElements; elementIndex++){\n            const element = elements[elementIndex];\n            const elementSequence = $68afdcc30aeb6706$var$getElementSequence(element, elementSequences);\n            for(const key in keyframes){\n                const valueSequence = $68afdcc30aeb6706$var$getValueSequence(key, elementSequence);\n                let valueKeyframes = (0, $330ddc5eb9100e1b$export$388e66a97327a012)(keyframes[key]);\n                const valueOptions = (0, $57d7e8b2ef7ce651$export$d2312e68e1f5ad00)(options, key);\n                let { duration: duration = defaultOptions.duration || (0, $dc2d63b917c60329$export$ebe90cb607ad99e).duration, easing: easing = defaultOptions.easing || (0, $dc2d63b917c60329$export$ebe90cb607ad99e).easing } = valueOptions;\n                if ((0, $c0efdae2be78a137$export$d81a3021299cadf2)(easing)) {\n                    (0, $82adf2b309a976d9$export$f5708dca728d7177)(key === \"opacity\" || valueKeyframes.length > 1, \"spring must be provided 2 keyframes within timeline()\");\n                    const custom = easing.createAnimation(valueKeyframes, key !== \"opacity\", ()=>0, key);\n                    easing = custom.easing;\n                    valueKeyframes = custom.keyframes || valueKeyframes;\n                    duration = custom.duration || duration;\n                }\n                const delay = (0, $98bb634993f4306d$export$4cf8f03b86be8175)(options.delay, elementIndex, numElements) || 0;\n                const startTime = currentTime + delay;\n                const targetTime = startTime + duration;\n                /**\n                 *\n                 */ let { offset: offset = (0, $9b3af257d77590ba$export$24dbcec0b26e6d9d)(valueKeyframes.length) } = valueOptions;\n                /**\n                 * If there's only one offset of 0, fill in a second with length 1\n                 *\n                 * TODO: Ensure there's a test that covers this removal\n                 */ if (offset.length === 1 && offset[0] === 0) offset[1] = 1;\n                /**\n                 * Fill out if offset if fewer offsets than keyframes\n                 */ const remainder = offset.length - valueKeyframes.length;\n                remainder > 0 && (0, $9b3af257d77590ba$export$dafee61230cf05c6)(offset, remainder);\n                /**\n                 * If only one value has been set, ie [1], push a null to the start of\n                 * the keyframe array. This will let us mark a keyframe at this point\n                 * that will later be hydrated with the previous value.\n                 */ valueKeyframes.length === 1 && valueKeyframes.unshift(null);\n                /**\n                 * Add keyframes, mapping offsets to absolute time.\n                 */ (0, $b8308a889cc84729$export$89dfa6760a9f76e7)(valueSequence, valueKeyframes, easing, offset, startTime, targetTime);\n                maxDuration = Math.max(delay + duration, maxDuration);\n                totalDuration = Math.max(targetTime, totalDuration);\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */ elementSequences.forEach((valueSequences, element)=>{\n        for(const key in valueSequences){\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */ valueSequence.sort((0, $184029bcb6b17be4$export$66dd3fbf44e05bd9));\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */ for(let i = 0; i < valueSequence.length; i++){\n                const { at: at, value: value, easing: easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push((0, $b5fe3643ba3c2da8$export$504d7abb21fa8c9)(0, totalDuration, at));\n                valueEasing.push(easing || (0, $dc2d63b917c60329$export$ebe90cb607ad99e).easing);\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */ if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(\"linear\");\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */ if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            animationDefinitions.push([\n                element,\n                key,\n                keyframes,\n                Object.assign(Object.assign(Object.assign({}, defaultOptions), {\n                    duration: totalDuration,\n                    easing: valueEasing,\n                    offset: valueOffset\n                }), timelineOptions)\n            ]);\n        }\n    });\n    return animationDefinitions;\n}\nfunction $68afdcc30aeb6706$var$getElementSequence(element, sequences) {\n    !sequences.has(element) && sequences.set(element, {});\n    return sequences.get(element);\n}\nfunction $68afdcc30aeb6706$var$getValueSequence(name, sequences) {\n    if (!sequences[name]) sequences[name] = [];\n    return sequences[name];\n}\n\n\nconst $57751d9537c999c1$var$ctaArrow = document.querySelector(\".cta-arrow\");\nconst $57751d9537c999c1$var$ctaBtn = document.querySelector(\".cta-btn\");\nconst $57751d9537c999c1$var$headingsub = new (0, $0129d5cb2313b09f$export$2e2bcd8739ae039)(\"#sub-heading\", {\n    types: \"lines\"\n});\nconst $57751d9537c999c1$var$headingMain = new (0, $0129d5cb2313b09f$export$2e2bcd8739ae039)(\"#main-heading\", {\n    types: \"words\"\n});\nconst $57751d9537c999c1$var$mq = window.matchMedia(\"(max-height: 58.25em)\");\nconst $57751d9537c999c1$var$ySpaceAmount = $57751d9537c999c1$var$mq.matches ? 500 : 60;\nconst $57751d9537c999c1$var$headingAnimation = [\n    ...$57751d9537c999c1$var$headingsub.lines,\n    ...$57751d9537c999c1$var$headingMain.words\n];\nconst $57751d9537c999c1$var$ctaAnimation = [\n    [\n        $57751d9537c999c1$var$ctaArrow,\n        {\n            x: [\n                24,\n                0\n            ],\n            transform: [\n                \"rotate(54deg)\",\n                \"rotate(-9deg)\"\n            ],\n            opacity: [\n                0,\n                1\n            ]\n        }\n    ],\n    [\n        $57751d9537c999c1$var$ctaBtn,\n        {\n            y: [\n                24,\n                0\n            ],\n            opacity: [\n                0,\n                1\n            ]\n        }\n    ]\n];\nconst $57751d9537c999c1$export$592dbd515a49cf1b = ()=>{\n    (0, $e7dee9a46833b703$export$e3607ec2d7a891c4)($57751d9537c999c1$var$headingAnimation, {\n        y: [\n            24,\n            0\n        ],\n        opacity: [\n            0,\n            1\n        ]\n    }, {\n        duration: [\n            1\n        ],\n        delay: (0, $98bb634993f4306d$export$ef0b4d89074db4d0)(0.08)\n    });\n    (0, $68afdcc30aeb6706$export$cddc5598d4bb8461)($57751d9537c999c1$var$ctaAnimation, {\n        duration: [\n            0.8\n        ],\n        delay: [\n            1.7\n        ]\n    });\n    (0, $983dfce98d47352b$export$acb1e9cb9ce4ca56)(\".section\", (sections)=>{\n        (0, $e7dee9a46833b703$export$e3607ec2d7a891c4)(sections.target, {\n            y: [\n                $57751d9537c999c1$var$ySpaceAmount,\n                0\n            ],\n            opacity: [\n                0,\n                1\n            ]\n        }, {\n            duration: 1,\n            delay: 1\n        });\n    });\n};\n\n\nconst $0dfdeabc8d0dc6b3$var$offsetCalculation = ()=>{\n    const heading = document.querySelector(\".main-heading\");\n    const ctaContainer = document.querySelector(\".header--cta-container\");\n    const headingHeight = heading.offsetHeight;\n    const headingWidth = heading.offsetWidth;\n    console.log(headingWidth);\n    ctaContainer.style.top = `${headingHeight * 0.95}px`;\n// ctaContainer.style.right = `${-(headingWidth * 0.25)}px`;\n};\n[\n    \"DOMContentLoaded\",\n    \"resize\",\n    \"load\"\n].forEach((event)=>{\n    window.addEventListener(event, ()=>{\n        $0dfdeabc8d0dc6b3$var$offsetCalculation();\n    });\n});\nwindow.addEventListener(\"DOMContentLoaded\", (event)=>{\n    event.preventDefault();\n    (0, $57751d9537c999c1$export$592dbd515a49cf1b)();\n});\nconst $0dfdeabc8d0dc6b3$var$formBtn = document.querySelector(\".form-btn\");\nconst $0dfdeabc8d0dc6b3$var$form = document.querySelector(\".email-form\");\nconst $0dfdeabc8d0dc6b3$var$formInput = document.querySelector(\".email-form input\");\nconst $0dfdeabc8d0dc6b3$var$formTextarea = document.querySelector(\".email-form textarea\");\n$0dfdeabc8d0dc6b3$var$formInput.addEventListener(\"blur\", (0, $237a55304db5865e$export$18148d12c805c5b0));\n$0dfdeabc8d0dc6b3$var$form.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    const clientEmail = $0dfdeabc8d0dc6b3$var$formInput.value;\n    const projectDetail = $0dfdeabc8d0dc6b3$var$formTextarea.value;\n    const formStatus = (0, $237a55304db5865e$export$ed692cabb252e59b)(); //returns an object\n    if (!formStatus.formComplete.status) (0, $f63449e02fe9e20a$export$5ea928c9faf85bd3)(\"error\", formStatus.formComplete.message);\n    else {\n        $0dfdeabc8d0dc6b3$var$formBtn.textContent = \"sending...\";\n        (0, $edcc32604132db5e$export$1cea2e25b75a88f2)({\n            clientEmail: clientEmail,\n            projectDetail: projectDetail\n        });\n        $0dfdeabc8d0dc6b3$var$form.reset();\n    }\n});\n\n})();\n//# sourceMappingURL=index.js.map\n","import { sendEmail } from \"./emailSend.js\";\r\nimport { validateEmail, validateForm } from \"./validateForm.js\";\r\nimport { alert } from \"./showAlerts.js\";\r\nimport { startAnimation } from \"./contentAnimation.js\";\r\n\r\nconst offsetCalculation = () => {\r\n  const heading = document.querySelector(\".main-heading\");\r\n  const ctaContainer = document.querySelector(\".header--cta-container\");\r\n\r\n  const headingHeight = heading.offsetHeight;\r\n  const headingWidth = heading.offsetWidth;\r\n  console.log(headingWidth);\r\n\r\n  ctaContainer.style.top = `${headingHeight * 0.95}px`;\r\n  // ctaContainer.style.right = `${-(headingWidth * 0.25)}px`;\r\n  \r\n}\r\n\r\n[\"DOMContentLoaded\", \"resize\", \"load\"].forEach(event => {\r\n  window.addEventListener(event, () => {\r\n    offsetCalculation();\r\n  });\r\n});\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", event => {\r\n  event.preventDefault();\r\n  startAnimation();\r\n});\r\n\r\nconst formBtn = document.querySelector(\".form-btn\");\r\nconst form = document.querySelector(\".email-form\");\r\nconst formInput = document.querySelector(\".email-form input\");\r\nconst formTextarea = document.querySelector(\".email-form textarea\");\r\n\r\nformInput.addEventListener(\"blur\", validateEmail);\r\n\r\nform.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n\r\n  const clientEmail = formInput.value;\r\n  const projectDetail = formTextarea.value;\r\n\r\n  const formStatus = validateForm(); //returns an object\r\n\r\n  if (!formStatus.formComplete.status) alert(\"error\", formStatus.formComplete.message);\r\n  \r\n  \r\n  else {\r\n    formBtn.textContent = \"sending...\";\r\n    sendEmail({ clientEmail, projectDetail });\r\n\r\n    form.reset();\r\n  }\r\n});\r\n","\r\nimport { useFetch } from \"./fetchData.js\";\r\nimport { alert } from \"./showAlerts.js\";\r\n\r\n\r\nconst formBtn = document.querySelector(\".form-btn\");\r\n\r\nexport const sendEmail = async (data) => {\r\n\r\n  try {\r\n    const result = await useFetch(\"/sendEmail\", data);\r\n\r\n    if (result.status === \"success\") {\r\n      formBtn.classList.add(\"form-btn--rounded\");\r\n      formBtn.textContent = \"✔\";\r\n      alert(\"success\", \"Your email has been sent successfully! 👍\");\r\n    }\r\n      \r\n    if (result.status !== \"success\") return;\r\n\r\n  } catch (error) {\r\n    alert(\"error\", error.message);\r\n  }\r\n};\r\n","\r\nexport const useFetch = async (url, emailData) => {\r\n  \r\n  try {\r\n    const request = fetch(url, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(emailData),\r\n        });\r\n                \r\n    const response = await request;\r\n    \r\n    // Check if the response is not OK (status code outside the range 200-299)\r\n    if (!response.ok) {\r\n      const errorData = await response.json(); // Assuming the error response is in JSON format\r\n      throw Error(errorData.message || \"Something went wrong\");\r\n    }\r\n        \r\n    const data = await response.json();\r\n    \r\n    return data;\r\n\r\n    \r\n  } catch (error) {\r\n    if (error.message === \"Failed to fetch\")\r\n      error.message = `Unable to reach the server. Please check your internet connection...`;\r\n    throw error;\r\n  }\r\n};\r\n","\r\nconst formBtn = document.querySelector(\".form-btn\");\r\nlet refresh;\r\nconst hideAlert = () => {\r\n  const element = document.querySelector(\".alert\");\r\n  if(element) element.parentElement.removeChild(element);\r\n  formBtn.classList.remove(\"form-btn--rounded\"); // remove it at the same time of hiding the alert\r\n\r\n  if(refresh) setTimeout(() => location.assign(\"/\"), 0.5 * 1000);\r\n}\r\n\r\nexport const alert = (type, msg) => {\r\n  const htmlCode = `<div class=\"alert alert--${type}\">${msg}</div>`\r\n  document.querySelector(\"body\").insertAdjacentHTML(\"afterbegin\", htmlCode);\r\n  type === \"success\"? refresh = true : refresh = false;\r\n\r\n  window.setTimeout(hideAlert, 4 *1000);\r\n};\r\n","\r\nimport { alert } from \"./showAlerts.js\";\r\n\r\nconst emailRegex = new RegExp(/^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$/);\r\n\r\nconst formInputs = [document.querySelector(\".email-form input\"), document.querySelector(\".email-form textarea\")];\r\n\r\nlet formStatus = {\r\n  formComplete : {\r\n    status: false,\r\n    message: \"Please Fill out all the Fields before Submitting\"\r\n  },\r\n  emailFormatIsCorrect : {\r\n    status: false,\r\n    message: \"Please Insert a valid Email address!\"\r\n  },\r\n}\r\n\r\n\r\nconst shakingField = function(field) {\r\n  field.classList.add(\"shaking\");\r\n  setTimeout(() => {\r\n   field.classList.remove(\"shaking\");\r\n  }, 400);\r\n}\r\n\r\n\r\nexport const validateEmail = function (event) {\r\n  formStatus.emailFormatIsCorrect.status = true;\r\n  const userInput = event.target.value;\r\n  if (userInput !== \"\" && !emailRegex.test(userInput) || !emailRegex.test(userInput)) {\r\n    shakingField(event.target);\r\n    alert(\"error\", formStatus.emailFormatIsCorrect.message);\r\n    formStatus.emailFormatIsCorrect.status = false;\r\n  } \r\n};\r\n\r\nexport const validateForm = () => {\r\n  formStatus.formComplete.status = true\r\n   formInputs.forEach(input => {\r\n      if(input.value.trim() === \"\") formStatus.formComplete.status = false;\r\n   });   \r\n   \r\n   return formStatus;\r\n}\r\n","import SplitType from \"split-type\";\r\nimport { animate, stagger, timeline, inView} from \"motion\";\r\n\r\nconst ctaArrow = document.querySelector(\".cta-arrow\");\r\nconst ctaBtn = document.querySelector(\".cta-btn\");\r\n\r\nconst headingsub = new SplitType(\"#sub-heading\", {types: \"lines\"});\r\nconst headingMain = new SplitType(\"#main-heading\", {types: \"words\"});\r\n\r\nconst mq = window.matchMedia(\"(max-height: 58.25em)\");\r\n\r\nconst ySpaceAmount = mq.matches ? 500 : 60;\r\n\r\n\r\nconst headingAnimation = [...headingsub.lines, ...headingMain.words];\r\nconst ctaAnimation = [\r\n    [ctaArrow,{ x: [24, 0], transform: [\"rotate(54deg)\", \"rotate(-9deg)\"] ,opacity: [0, 1]}, ],\r\n    [ctaBtn, {y: [24, 0], opacity: [0, 1]}]\r\n];\r\nexport const startAnimation = () => {\r\n    animate(headingAnimation, {y: [24, 0], opacity: [0, 1]}, {duration:[1], delay: stagger(0.08)});\r\n    timeline(ctaAnimation, {duration:[0.8], delay: [1.7]});\r\n\r\n    inView(\".section\", (sections)=> {\r\n        animate(sections.target, {y: [ySpaceAmount, 0], opacity: [0, 1]}, {duration:1, delay: 1});\r\n    });\r\n}","/**\n * SplitType\n * https://github.com/lukePeavey/SplitType\n * @version 0.3.4\n * @author Luke Peavey <lwpeavey@gmail.com>\n */\n\n// Polyfill the following DOM methods that are not supported in IE 11.\n\n(function () {\n  function append() {\n    var length = arguments.length;\n\n    for (var i = 0; i < length; i++) {\n      var node = i < 0 || arguments.length <= i ? undefined : arguments[i];\n      if (node.nodeType === 1 || node.nodeType === 11) this.appendChild(node);else this.appendChild(document.createTextNode(String(node)));\n    }\n  }\n\n  function replaceChildren() {\n    while (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    if (arguments.length) this.append.apply(this, arguments);\n  }\n\n  function replaceWith() {\n    var parent = this.parentNode;\n\n    for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n      nodes[_key] = arguments[_key];\n    }\n\n    var i = nodes.length;\n    if (!parent) return;\n    if (!i) parent.removeChild(this);\n\n    while (i--) {\n      var node = nodes[i];\n\n      if (typeof node !== 'object') {\n        node = this.ownerDocument.createTextNode(node);\n      } else if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n\n      if (!i) {\n        parent.replaceChild(node, this);\n      } else {\n        parent.insertBefore(this.previousSibling, node);\n      }\n    }\n  }\n\n  if (typeof Element !== 'undefined') {\n    if (!Element.prototype.append) {\n      Element.prototype.append = append;\n      DocumentFragment.prototype.append = append;\n    }\n\n    if (!Element.prototype.replaceChildren) {\n      Element.prototype.replaceChildren = replaceChildren;\n      DocumentFragment.prototype.replaceChildren = replaceChildren;\n    }\n\n    if (!Element.prototype.replaceWith) {\n      Element.prototype.replaceWith = replaceWith;\n      DocumentFragment.prototype.replaceWith = replaceWith;\n    }\n  }\n})();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/**\n * Shallow merges the properties of an object with the target object. Only\n * includes properties that exist on the target object. Non-writable properties\n * on the target object will not be over-written.\n *\n * @param {Object} target\n * @param {Object} object\n */\nfunction extend(target, object) {\n  return Object.getOwnPropertyNames(Object(target)).reduce(function (extended, key) {\n    var currentValue = Object.getOwnPropertyDescriptor(Object(target), key);\n    var newValue = Object.getOwnPropertyDescriptor(Object(object), key);\n    return Object.defineProperty(extended, key, newValue || currentValue);\n  }, {});\n}\n\n/**\n * Checks if given value is a string\n *\n * @param {any} value\n * @return {boolean} `true` if `value` is a string, else `false`\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Parses user supplied settings objects.\n */\n\nfunction parseSettings() {\n  var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var object = extend(settings); // `split` may be used as an alias for the `types` option\n  // Parse the `types` settings into an array of valid split types.\n  // If `types` is explicitly set to an empty string or array, text will not be\n  // split at all.\n\n  var types;\n\n  if (object.types !== undefined) {\n    types = object.types;\n  } else if (object.split !== undefined) {\n    types = object.split;\n  }\n\n  if (types !== undefined) {\n    object.types = (isString(types) || isArray(types) ? String(types) : '').split(',').map(function (type) {\n      return String(type).trim();\n    }).filter(function (type) {\n      return /((line)|(word)|(char))/i.test(type);\n    });\n  } // Support `position: absolute` as an alias for `absolute: true`\n\n\n  if (object.absolute || object.position) {\n    object.absolute = object.absolute || /absolute/.test(settings.position);\n  }\n\n  return object;\n}\n\n/**\n * Takes a list of `types` and returns an object\n *\n * @param {string | string[]} value a comma separated list of split types\n * @return {{lines: boolean, words: boolean, chars: boolean}}\n */\n\nfunction parseTypes(value) {\n  var types = isString(value) || isArray(value) ? String(value) : '';\n  return {\n    none: !types,\n    lines: /line/i.test(types),\n    words: /word/i.test(types),\n    chars: /char/i.test(types)\n  };\n}\n\n/**\n * Returns true if `value` is a non-null object.\n * @param {any} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n\n/**\n * Returns true if `input` is one of the following:\n * - `Element`\n * - `Text`\n * - `DocumentFragment`\n */\n\nfunction isNode(input) {\n  return isObject(input) && /^(1|3|11)$/.test(input.nodeType);\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n * Original source: Lodash\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3)\n * // => true\n *\n * _.isLength(Number.MIN_VALUE)\n * // => false\n *\n * _.isLength(Infinity)\n * // => false\n *\n * _.isLength('3')\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value === 'number' && value > -1 && value % 1 === 0;\n}\n/**\n * Checks if `value` is an array-like object\n * @param {any} value\n * @return {boolean} true if `value` is array-like`, else `false`\n * @example\n * isArrayLike(new Array())\n * // => true\n *\n * isArrayLike(document.querySelectorAll('div'))\n * // => true\n *\n * isArrayLike(document.getElementsByTagName('div'))\n * // => true\n *\n * isArrayLike(() => {})\n * // => false\n *\n * isArrayLike({foo: 'bar'})\n * // => false\n *\n * * isArrayLike(null)\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return isObject(value) && isLength(value.length);\n}\n\n/**\n * Coerces `value` to an `Array`.\n *\n * @param {any} value\n * @return {any[]}\n * @example\n * // If `value` is any `Array`, returns original `Array`\n * let arr = [1, 2]\n * toArray(arr)\n * // => arr\n *\n * // If `value` is an `ArrayLike`, its equivalent to `Array.from(value)`\n * let nodeList = document.querySelectorAll('div')\n * toArray(nodeList)\n * // => HTMLElement[] s\n *\n * // If value is falsy, returns empty array\n * toArray(null)\n * // => []\n *\n * // For any other type of value, its equivalent to `Array.of(value)`\n * let element = document.createElement('div')\n * toArray(element)\n * // => [element]\n *\n */\n\nfunction toArray(value) {\n  if (isArray(value)) return value;\n  if (value == null) return [];\n  return isArrayLike(value) ? Array.prototype.slice.call(value) : [value];\n}\n\n/**\n * Processes target elements for the splitType function.\n *\n * @param {any} target Can be one of the following:\n * 1. `string` - A css selector\n * 2. `HTMLElement` - A single element\n * 3. `NodeList` - A nodeList\n * 4. `Element[]` - An array of elements\n * 5. `Array<NodeList|Element[]>` - An nested array of elements\n * @returns {Element[]} A flat array HTML elements\n * @return A flat array of elements or empty array if no elements are found\n */\n\nfunction getTargetElements(target) {\n  var elements = target; // If `target` is a selector string...\n\n  if (isString(target)) {\n    if (/^(#[a-z]\\w+)$/.test(target.trim())) {\n      // If `target` is an ID, use `getElementById`\n      elements = document.getElementById(target.trim().slice(1));\n    } else {\n      // Else use `querySelectorAll`\n      elements = document.querySelectorAll(target);\n    }\n  } // Return a flattened array of elements\n\n\n  return toArray(elements).reduce(function (result, element) {\n    return [].concat(_toConsumableArray(result), _toConsumableArray(toArray(element).filter(isNode)));\n  }, []);\n}\n\nvar entries = Object.entries;\n\nvar expando = \"_splittype\";\nvar cache = {};\nvar uid = 0;\n/**\n * Stores data associated with DOM elements or other objects. This is a\n * simplified version of jQuery's data method.\n *\n * @signature Data(owner)\n * @description Get the data store object for the given owner.\n * @param {Object} owner the object that data will be associated with.\n * @return {Object} the data object for given `owner`. If no data exists\n *     for the given object, creates a new data store and returns it.\n *\n * @signature Data(owner, key)\n * @description Get the value\n * @param {Object} owner\n * @param {string} key\n * @return {any} the value of the provided key. If key does not exist, returns\n *     undefined.\n *\n * @signature Data(owner, key, value)\n * @description Sets the given key/value pair in data store\n * @param {Object} owner\n * @param {string} key\n * @param {any} value\n */\n\nfunction set(owner, key, value) {\n  if (!isObject(owner)) {\n    console.warn('[data.set] owner is not an object');\n    return null;\n  }\n\n  var id = owner[expando] || (owner[expando] = ++uid);\n  var data = cache[id] || (cache[id] = {});\n\n  if (value === undefined) {\n    if (!!key && Object.getPrototypeOf(key) === Object.prototype) {\n      cache[id] = _objectSpread2(_objectSpread2({}, data), key);\n    }\n  } else if (key !== undefined) {\n    data[key] = value;\n  }\n\n  return value;\n}\nfunction get(owner, key) {\n  var id = isObject(owner) ? owner[expando] : null;\n  var data = id && cache[id] || {};\n\n  if (key === undefined) {\n    return data;\n  }\n\n  return data[key];\n}\n/**\n * Remove all data associated with the given element\n */\n\nfunction remove(element) {\n  var id = element && element[expando];\n\n  if (id) {\n    delete element[id];\n    delete cache[id];\n  }\n}\n/**\n * Clear all cached data\n */\n\nfunction clear() {\n  Object.keys(cache).forEach(function (key) {\n    delete cache[key];\n  });\n}\n/**\n * Remove all temporary data from the store.\n */\n\nfunction cleanup() {\n  entries(cache).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        _ref2$ = _ref2[1],\n        isRoot = _ref2$.isRoot,\n        isSplit = _ref2$.isSplit;\n\n    if (!isRoot || !isSplit) {\n      cache[id] = null;\n      delete cache[id];\n    }\n  });\n}\n\n/**\n * Splits a string into an array of words.\n *\n * @param {string} string\n * @param {string | RegExp} [separator = ' ']\n * @return {string[]} Array of words\n */\nfunction toWords(value) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  var string = value ? String(value) : '';\n  return string.trim().replace(/\\s+/g, ' ').split(separator);\n}\n\n/**\n * Based on lodash#split <https://lodash.com/license>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters &\n * Editors\n */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\";\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\";\nvar rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\";\nvar rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */\n\nvar rsAstral = \"[\".concat(rsAstralRange, \"]\");\nvar rsCombo = \"[\".concat(rsComboMarksRange).concat(rsComboSymbolsRange, \"]\");\nvar rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\";\nvar rsModifier = \"(?:\".concat(rsCombo, \"|\").concat(rsFitz, \")\");\nvar rsNonAstral = \"[^\".concat(rsAstralRange, \"]\");\nvar rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";\nvar rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";\nvar rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar reOptMod = \"\".concat(rsModifier, \"?\");\nvar rsOptVar = \"[\".concat(rsVarRange, \"]?\");\nvar rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = \"(?:\".concat([\"\".concat(rsNonAstral).concat(rsCombo, \"?\"), rsCombo, rsRegional, rsSurrPair, rsAstral].join('|'), \"\\n)\");\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\nvar reUnicode = RegExp(\"\".concat(rsFitz, \"(?=\").concat(rsFitz, \")|\").concat(rsSymbol).concat(rsSeq), 'g');\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\nvar unicodeRange = [rsZWJ, rsAstralRange, rsComboMarksRange, rsComboSymbolsRange, rsVarRange];\nvar reHasUnicode = RegExp(\"[\".concat(unicodeRange.join(''), \"]\"));\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\nfunction asciiToArray(string) {\n  return string.split('');\n}\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\n\n\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction stringToArray(string) {\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n}\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values.\n *\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\nfunction toString(value) {\n  return value == null ? '' : String(value);\n}\n/**\n * Splits `string` into an array of characters. If `separator` is omitted,\n * it behaves likes split.split('').\n *\n * Unlike native string.split(''), it can split strings that contain unicode\n * characters like emojis and symbols.\n *\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} [separator=''] The separator pattern to split by.\n * @returns {Array} Returns the string segments.\n * @example\n * toChars('foo');\n * // => ['f', 'o', 'o']\n *\n * toChars('foo bar');\n * // => [\"f\", \"o\", \"o\", \" \", \"b\", \"a\", \"r\"]\n *\n * toChars('f😀o');\n * // => ['f', '😀', 'o']\n *\n * toChars('f-😀-o', /-/);\n * // => ['f', '😀', 'o']\n *\n */\n\n\nfunction toChars(string) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  string = toString(string);\n\n  if (string && isString(string)) {\n    if (!separator && hasUnicode(string)) {\n      return stringToArray(string);\n    }\n  }\n\n  return string.split(separator);\n}\n\n/**\n * Create an HTML element with the the given attributes\n *\n * attributes can include standard HTML attribute, as well as the following\n * \"special\" properties:\n *   - children: HTMLElement | ArrayLike<HTMLElement>\n *   - textContent: string\n *   - innerHTML: string\n *\n * @param {string} name\n * @param  {Object} [attributes]\n * @returns {HTMLElement}\n */\n\nfunction createElement(name, attributes) {\n  var element = document.createElement(name);\n\n  if (!attributes) {\n    // When called without the second argument, its just return the result\n    // of `document.createElement`\n    return element;\n  }\n\n  Object.keys(attributes).forEach(function (attribute) {\n    var rawValue = attributes[attribute];\n    var value = isString(rawValue) ? rawValue.trim() : rawValue; // Ignore attribute if the value is `null` or an empty string\n\n    if (value === null || value === '') return;\n\n    if (attribute === 'children') {\n      // Children can be one or more Elements or DOM strings\n      element.append.apply(element, _toConsumableArray(toArray(value)));\n    } else {\n      // Handle standard HTML attributes\n      element.setAttribute(attribute, value);\n    }\n  });\n  return element;\n}\n\nvar defaults = {\n  splitClass: '',\n  lineClass: 'line',\n  wordClass: 'word',\n  charClass: 'char',\n  types: ['lines', 'words', 'chars'],\n  absolute: false,\n  tagName: 'div'\n};\n\n/**\n * Splits the text content of a single TextNode into words and/or characters.\n *\n * This functions gets called for every text node inside the target element. It\n * replaces the text node with a document fragment containing the split text.\n * Returns an array of the split word and character elements from this node.\n *\n * @param {TextNode} textNode\n * @param {Object} settings\n * @return {{words: Element[], chars: Element[]}}\n */\n\nfunction splitWordsAndChars(textNode, settings) {\n  settings = extend(defaults, settings); // The split types\n\n  var types = parseTypes(settings.types); // the tag name for split text nodes\n\n  var TAG_NAME = settings.tagName; // value of the text node\n\n  var VALUE = textNode.nodeValue; // `splitText` is a wrapper to hold the HTML structure\n\n  var splitText = document.createDocumentFragment(); // Arrays of split word and character elements\n\n  var words = [];\n  var chars = [];\n\n  if (/^\\s/.test(VALUE)) {\n    splitText.append(' ');\n  } // Create an array of wrapped word elements.\n\n\n  words = toWords(VALUE).reduce(function (result, WORD, idx, arr) {\n    // Let `wordElement` be the wrapped element for the current word\n    var wordElement;\n    var characterElementsForCurrentWord; // -> If splitting text into characters...\n\n    if (types.chars) {\n      // Iterate through the characters in the current word\n      characterElementsForCurrentWord = toChars(WORD).map(function (CHAR) {\n        var characterElement = createElement(TAG_NAME, {\n          \"class\": \"\".concat(settings.splitClass, \" \").concat(settings.charClass),\n          style: 'display: inline-block;',\n          children: CHAR\n        });\n        set(characterElement, 'isChar', true);\n        chars = [].concat(_toConsumableArray(chars), [characterElement]);\n        return characterElement;\n      });\n    } // END IF;\n\n\n    if (types.words || types.lines) {\n      // -> If Splitting Text Into Words...\n      //    Create an element to wrap the current word. If we are also\n      //    splitting text into characters, the word element will contain the\n      //    wrapped character nodes for this word. If not, it will contain the\n      //    plain text content (WORD)\n      wordElement = createElement(TAG_NAME, {\n        \"class\": \"\".concat(settings.wordClass, \" \").concat(settings.splitClass),\n        style: \"display: inline-block; \".concat(types.words && settings.absolute ? \"position: relative;\" : ''),\n        children: types.chars ? characterElementsForCurrentWord : WORD\n      });\n      set(wordElement, {\n        isWord: true,\n        isWordStart: true,\n        isWordEnd: true\n      });\n      splitText.appendChild(wordElement);\n    } else {\n      // -> If NOT splitting into words OR lines...\n      //    Append the characters elements directly to splitText.\n      characterElementsForCurrentWord.forEach(function (characterElement) {\n        splitText.appendChild(characterElement);\n      });\n    }\n\n    if (idx < arr.length - 1) {\n      // Add a space after the word.\n      splitText.append(' ');\n    } // If not splitting text into words, we return an empty array\n\n\n    return types.words ? result.concat(wordElement) : result;\n  }, []); // END LOOP;\n  // Add a trailing white space to maintain word spacing\n\n  if (/\\s$/.test(VALUE)) {\n    splitText.append(' ');\n  }\n\n  textNode.replaceWith(splitText);\n  return {\n    words: words,\n    chars: chars\n  };\n}\n\n/**\n * Splits the text content of a target element into words and/or characters.\n * The function is recursive, it will also split the text content of any child\n * elements into words/characters, while preserving the nested elements.\n *\n * @param {Node} node an HTML Element or Text Node\n * @param {Object} setting splitType settings\n */\n\nfunction split(node, settings) {\n  var type = node.nodeType; // Arrays of split words and characters\n\n  var wordsAndChars = {\n    words: [],\n    chars: []\n  }; // Only proceed if `node` is an `Element`, `Fragment`, or `Text`\n\n  if (!/(1|3|11)/.test(type)) {\n    return wordsAndChars;\n  } // A) IF `node` is TextNode that contains characters other than white space...\n  //    Split the text content of the node into words and/or characters\n  //    return an object containing the split word and character elements\n\n\n  if (type === 3 && /\\S/.test(node.nodeValue)) {\n    return splitWordsAndChars(node, settings);\n  } // B) ELSE `node` is an 'Element'\n  //    Iterate through its child nodes, calling the `split` function\n  //    recursively for each child node.\n\n\n  var childNodes = toArray(node.childNodes);\n\n  if (childNodes.length) {\n    set(node, 'isSplit', true); // we need to set a few styles on nested html elements\n\n    if (!get(node).isRoot) {\n      node.style.display = 'inline-block';\n      node.style.position = 'relative'; // To maintain original spacing around nested elements when we are\n      // splitting text into lines, we need to check if the element should\n      // have a space before and after, and store that value for later.\n      // Note: this was necessary to maintain the correct spacing when nested\n      // elements do not align with word boundaries. For example, a nested\n      // element only wraps part of a word.\n\n      var nextSibling = node.nextSibling;\n      var prevSibling = node.previousSibling;\n      var text = node.textContent || '';\n      var textAfter = nextSibling ? nextSibling.textContent : ' ';\n      var textBefore = prevSibling ? prevSibling.textContent : ' ';\n      set(node, {\n        isWordEnd: /\\s$/.test(text) || /^\\s/.test(textAfter),\n        isWordStart: /^\\s/.test(text) || /\\s$/.test(textBefore)\n      });\n    }\n  } // Iterate through child nodes, calling `split` recursively\n  // Returns an object containing all split words and chars\n\n\n  return childNodes.reduce(function (result, child) {\n    var _split = split(child, settings),\n        words = _split.words,\n        chars = _split.chars;\n\n    return {\n      words: [].concat(_toConsumableArray(result.words), _toConsumableArray(words)),\n      chars: [].concat(_toConsumableArray(result.chars), _toConsumableArray(chars))\n    };\n  }, wordsAndChars);\n}\n\n/**\n * Gets the height and position of an element relative to offset parent.\n * Should be equivalent to offsetTop and offsetHeight, but with sub-pixel\n * precision.\n *\n * TODO needs work\n */\nfunction getPosition(node, isWord, settings, scrollPos) {\n  if (!settings.absolute) {\n    return {\n      top: isWord ? node.offsetTop : null\n    };\n  }\n\n  var parent = node.offsetParent;\n\n  var _scrollPos = _slicedToArray(scrollPos, 2),\n      scrollX = _scrollPos[0],\n      scrollY = _scrollPos[1];\n\n  var parentX = 0;\n  var parentY = 0;\n\n  if (parent && parent !== document.body) {\n    var parentRect = parent.getBoundingClientRect();\n    parentX = parentRect.x + scrollX;\n    parentY = parentRect.y + scrollY;\n  }\n\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      width = _node$getBoundingClie.width,\n      height = _node$getBoundingClie.height,\n      x = _node$getBoundingClie.x,\n      y = _node$getBoundingClie.y;\n\n  var top = y + scrollY - parentY;\n  var left = x + scrollX - parentX;\n  return {\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n}\n\n/**\n * Recursively \"un-splits\" text into words.\n * This is used when splitting text into lines but not words.\n * We initially split the text into words so we can maintain the correct line\n * breaks. Once text has been split into lines, we \"un-split\" the words...\n * @param {Element}\n * @return {void}\n */\n\nfunction unSplitWords(element) {\n  if (!get(element).isWord) {\n    toArray(element.children).forEach(function (child) {\n      return unSplitWords(child);\n    });\n  } else {\n    remove(element);\n    element.replaceWith.apply(element, _toConsumableArray(element.childNodes));\n  }\n}\n\nvar createFragment = function createFragment() {\n  return document.createDocumentFragment();\n};\n\nfunction repositionAfterSplit(element, settings, scrollPos) {\n  var types = parseTypes(settings.types);\n  var TAG_NAME = settings.tagName;\n  var nodes = element.getElementsByTagName('*');\n  var wordsInEachLine = [];\n  var wordsInCurrentLine = [];\n  var lineOffsetY = null;\n  var elementHeight;\n  var elementWidth;\n  var contentBox;\n  var lines = [];\n  /**------------------------------------------------\n   ** GET STYLES AND POSITIONS\n   **-----------------------------------------------*/\n  // There is no built-in way to detect natural line breaks in text (when a\n  // block of text wraps to fit its container). To split text into lines, we\n  // have to detect line breaks by checking the top offset of words. This is\n  // why text was split into words first. To apply absolute\n  // positioning, its also necessary to record the size and position of every\n  // split node (lines, words, characters).\n  // To consolidate DOM getting/settings, this is all done at the same time,\n  // before actually splitting text into lines, which involves restructuring\n  // the DOM again.\n  // Cache the element's parent and next sibling (for DOM removal).\n\n  var parent = element.parentElement;\n  var nextSibling = element.nextElementSibling; // a wrapper for the new HTML structure\n\n  var splitText = createFragment(); // get the computed style object for the element\n\n  var cs = window.getComputedStyle(element);\n  var align = cs.textAlign;\n  var fontSize = parseFloat(cs.fontSize);\n  var lineThreshold = fontSize * 0.2; // IF using absolute position...\n\n  if (settings.absolute) {\n    // Let contentBox be an object containing the width and offset position of\n    // the element's content box (the area inside padding box). This is needed\n    // (for absolute positioning) to set the width and position of line\n    // elements, which have not been created yet.\n    contentBox = {\n      left: element.offsetLeft,\n      top: element.offsetTop,\n      width: element.offsetWidth\n    }; // Let elementWidth and elementHeight be the actual width/height of the\n    // element. Also check if the element has inline height or width styles\n    // already set. If it does, cache those values for later.\n\n    elementWidth = element.offsetWidth;\n    elementHeight = element.offsetHeight; // Store the original inline height and width of the element\n\n    set(element, {\n      cssWidth: element.style.width,\n      cssHeight: element.style.height\n    });\n  } // Iterate over every node in the target element\n\n\n  toArray(nodes).forEach(function (node) {\n    // node is a word element or custom html element\n    var isWordLike = node.parentElement === element; // TODO needs work\n    // Get te size and position of split text nodes\n\n    var _getPosition = getPosition(node, isWordLike, settings, scrollPos),\n        width = _getPosition.width,\n        height = _getPosition.height,\n        top = _getPosition.top,\n        left = _getPosition.left; // If element is a `<br>` tag return here\n\n\n    if (/^br$/i.test(node.nodeName)) return;\n\n    if (types.lines && isWordLike) {\n      // We compare the top offset of the current word to the top offset of\n      // previous words on the current line. If the difference is greater than\n      // our defined threshold (20%), we assume this word is on a new line.\n      if (lineOffsetY === null || top - lineOffsetY >= lineThreshold) {\n        lineOffsetY = top;\n        wordsInEachLine.push(wordsInCurrentLine = []);\n      } // Add the current word node to the line array\n\n\n      wordsInCurrentLine.push(node);\n    } // END IF\n\n\n    if (settings.absolute) {\n      // Store the size and position split text nodes\n      set(node, {\n        top: top,\n        left: left,\n        width: width,\n        height: height\n      });\n    }\n  }); // END LOOP\n  // Remove the element from the DOM\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n  /**------------------------------------------------\n   ** SPLIT LINES\n   **-----------------------------------------------*/\n\n\n  if (types.lines) {\n    // Iterate over lines of text (see 11 b)\n    // Let `line` be the array of words in the current line.\n    // Return an array of the wrapped line elements (lineElements)\n    lines = wordsInEachLine.map(function (wordsInThisLine) {\n      // Create an element to wrap the current line.\n      var lineElement = createElement(TAG_NAME, {\n        \"class\": \"\".concat(settings.splitClass, \" \").concat(settings.lineClass),\n        style: \"display: block; text-align: \".concat(align, \"; width: 100%;\")\n      });\n      set(lineElement, 'isLine', true);\n      var lineDimensions = {\n        height: 0,\n        top: 1e4\n      }; // Append the `lineElement` to `container`\n\n      splitText.appendChild(lineElement); // Iterate over the word-level elements in the current line.\n      // Note: wordOrElement can either be a word node or nested element\n\n      wordsInThisLine.forEach(function (wordOrElement, idx, arr) {\n        var _data$get = get(wordOrElement),\n            isWordEnd = _data$get.isWordEnd,\n            top = _data$get.top,\n            height = _data$get.height;\n\n        var next = arr[idx + 1]; // Determine line height / y-position\n        // we use the height and offsetTop of the words which we already\n        // recorded. Because custom nested elements could have their own\n        // styles, the words on a line may not all be the same height or\n        // y position. So we take the greatest height / y - offset of the\n        // words on this line.\n\n        lineDimensions.height = Math.max(lineDimensions.height, height);\n        lineDimensions.top = Math.min(lineDimensions.top, top); // append the current word/element\n\n        lineElement.appendChild(wordOrElement); // Determine if there should space after the current element...\n        // If this is not the last word on the current line.\n        // TODO - logic for handing spacing can be improved\n\n        if (isWordEnd && get(next).isWordStart) {\n          lineElement.append(' ');\n        }\n      }); // END LOOP\n\n      if (settings.absolute) {\n        set(lineElement, {\n          height: lineDimensions.height,\n          top: lineDimensions.top\n        });\n      }\n\n      return lineElement;\n    }); // END LOOP\n\n    if (!types.words) {\n      unSplitWords(splitText);\n    } // 10. Insert the new container\n\n\n    element.replaceChildren(splitText);\n  }\n  /**------------------------------------------------\n   **  SET ABSOLUTE POSITION\n   **-----------------------------------------------*/\n  // Apply absolute positioning to all child elements of the target element.\n  // This includes split lines, words, chars, and custom HTML elements that were\n  // included by the user. The size and position of child elements has already\n  // been recorded before splitting text into lines.\n\n\n  if (settings.absolute) {\n    // Set the width/height of the parent element so it does not collapse\n    // when its children are set to absolute position.\n    element.style.width = \"\".concat(element.style.width || elementWidth, \"px\");\n    element.style.height = \"\".concat(elementHeight, \"px\"); // Iterate over all child elements\n\n    toArray(nodes).forEach(function (node) {\n      var _data$get2 = get(node),\n          isLine = _data$get2.isLine,\n          top = _data$get2.top,\n          left = _data$get2.left,\n          width = _data$get2.width,\n          height = _data$get2.height;\n\n      var parentData = get(node.parentElement);\n      var isChildOfLineNode = !isLine && parentData.isLine; // Set the top position of the current node.\n      // -> If `node` a line element, we use the top offset of its first child\n      // -> If `node` the child of line element, then its top offset is zero\n\n      node.style.top = \"\".concat(isChildOfLineNode ? top - parentData.top : top, \"px\"); // Set the left position of the current node.\n      // -> IF `node` is a line element, this is equal to the position left of\n      //    the content box of the parent element\n      // -> IF `node` is the child of a line element, the value has to adjusted\n      //    so its relative to the line element\n\n      node.style.left = isLine ? \"\".concat(contentBox.left, \"px\") : \"\".concat(left - (isChildOfLineNode ? contentBox.left : 0), \"px\"); // Set the height of the current node to the cached value.\n\n      node.style.height = \"\".concat(height, \"px\"); //  Set the width of the current node.\n      //  If its a line element, width is equal to the width of the contentBox.\n\n      node.style.width = isLine ? \"\".concat(contentBox.width, \"px\") : \"\".concat(width, \"px\"); // Finally, set the node's position to absolute.\n\n      node.style.position = 'absolute';\n    });\n  } // end if;\n  // 14. Re-attach the element to the DOM\n\n\n  if (parent) {\n    if (nextSibling) parent.insertBefore(element, nextSibling);else parent.appendChild(element);\n  }\n\n  return lines;\n}\n\nvar _defaults = extend(defaults, {});\n\nvar SplitType = /*#__PURE__*/function () {\n  _createClass(SplitType, null, [{\n    key: \"clearData\",\n\n    /**\n     * CLears all data\n     */\n    value: function clearData() {\n      clear();\n    }\n    /**\n     * The default settings for all splitType instances\n     * @static\n     */\n\n  }, {\n    key: \"setDefaults\",\n\n    /**\n     * Sets the default settings for all SplitType instances.\n     * The provided object will be merged with the existing defaults objects.\n     *\n     * @param {Object} settings an object containing the settings to override\n     * @returns {Object} the new default settings\n     * @public\n     * @static\n     * @example\n     * SplitType.setDefaults({ \"position\": \"absolute\" })\n     */\n    value: function setDefaults(options) {\n      _defaults = extend(_defaults, parseSettings(options));\n      return defaults;\n    }\n    /**\n     * Revert target elements to their original html content\n     * Has no effect on that\n     *\n     * @param {any} elements The target elements to revert. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @static\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(elements) {\n      getTargetElements(elements).forEach(function (element) {\n        var _data$get = get(element),\n            isSplit = _data$get.isSplit,\n            html = _data$get.html,\n            cssWidth = _data$get.cssWidth,\n            cssHeight = _data$get.cssHeight;\n\n        if (isSplit) {\n          element.innerHTML = html;\n          element.style.width = cssWidth || '';\n          element.style.height = cssHeight || '';\n          remove(element);\n        }\n      });\n    }\n    /**\n     * Creates a new SplitType instance\n     * This static method provides a way to create a `SplitType` instance without\n     * using the `new` keyword.\n     *\n     * @param {any} target The target elements to split. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @param {Object} [options] Settings for the SplitType instance\n     * @return {SplitType} the SplitType instance\n     * @static\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(target, options) {\n      return new SplitType(target, options);\n    }\n    /**\n     * Creates a new `SplitType` instance\n     *\n     * @param {any} elements The target elements to split. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @param {Object} [options] Settings for the SplitType instance\n     */\n\n  }, {\n    key: \"data\",\n\n    /**\n     * The internal data store\n     */\n    get: function get() {\n      return cache;\n    }\n  }, {\n    key: \"defaults\",\n    get: function get() {\n      return _defaults;\n    }\n    /**\n     * Sets the default settings for all SplitType instances.\n     *\n     * Setting `SplitType.defaults` to an object will merge that object with the\n     * existing defaults.\n     *\n     * @param {Object} settings an object containing the settings to override\n     * @deprecated\n     * @static\n     * @example\n     * SplitType.defaults = { \"position\": \"absolute\" }\n     */\n    ,\n    set: function set(options) {\n      _defaults = extend(_defaults, parseSettings(options));\n    }\n  }]);\n\n  function SplitType(elements, options) {\n    _classCallCheck(this, SplitType);\n\n    this.isSplit = false;\n    this.settings = extend(_defaults, parseSettings(options));\n    this.elements = getTargetElements(elements); // Start the split process\n\n    this.split();\n  }\n  /**\n   * Splits the text in all target elements. This method is called\n   * automatically when a new SplitType instance is created. It can also be\n   * called manually to re-split text with new options.\n   * @param {Object} options\n   * @public\n   */\n\n\n  _createClass(SplitType, [{\n    key: \"split\",\n    value: function split$1(options) {\n      var _this = this;\n\n      // Revert target elements (if they are already split)\n      // Note: revert was already called once in the constructor. However, we\n      // need to call it again here so text is reverted when the user manually\n      // calls the `split` method to re-split text.\n      this.revert(); // Store the original html content of each target element\n\n      this.elements.forEach(function (element) {\n        set(element, 'html', element.innerHTML);\n      }); // Create arrays to hold the split lines, words, and characters\n\n      this.lines = [];\n      this.words = [];\n      this.chars = []; // cache vertical scroll position before splitting\n\n      var scrollPos = [window.pageXOffset, window.pageYOffset]; // If new options were passed into the `split()` method, update settings\n\n      if (options !== undefined) {\n        this.settings = extend(this.settings, parseSettings(options));\n      }\n\n      var types = parseTypes(this.settings.types); // If the `types` option is set to an empty array, text will not be split.\n      // @example new SplitType('#target', { types: [] })\n\n      if (types.none) {\n        return;\n      } // Split text in each target element\n\n\n      this.elements.forEach(function (element) {\n        // Add the split text nodes from this element to the arrays of all split\n        // text nodes for this instance.\n        set(element, 'isRoot', true);\n\n        var _split2 = split(element, _this.settings),\n            words = _split2.words,\n            chars = _split2.chars;\n\n        _this.words = [].concat(_toConsumableArray(_this.words), _toConsumableArray(words));\n        _this.chars = [].concat(_toConsumableArray(_this.chars), _toConsumableArray(chars));\n      });\n      this.elements.forEach(function (element) {\n        if (types.lines || _this.settings.absolute) {\n          var lines = repositionAfterSplit(element, _this.settings, scrollPos);\n          _this.lines = [].concat(_toConsumableArray(_this.lines), _toConsumableArray(lines));\n        }\n      }); // Set isSplit to true for the SplitType instance\n\n      this.isSplit = true; // Set scroll position to cached value.\n\n      window.scrollTo(scrollPos[0], scrollPos[1]); // Clean up stored data\n\n      cleanup();\n    }\n    /**\n     * Reverts target element(s) back to their original html content\n     * Deletes all stored data associated with the target elements\n     * Resets the properties on the splitType instance\n     *\n     * @public\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert() {\n      if (this.isSplit) {\n        // Reset instance properties if necessary\n        this.lines = null;\n        this.words = null;\n        this.chars = null;\n        this.isSplit = false;\n      }\n\n      SplitType.revert(this.elements);\n    }\n  }]);\n\n  return SplitType;\n}();\n\nexport { SplitType as default };\n","import { animate as animate$1, withControls } from '@motionone/dom';\nimport { isFunction } from '@motionone/utils';\nimport { Animation } from '@motionone/animation';\n\nfunction animateProgress(target, options = {}) {\n    return withControls([\n        () => {\n            const animation = new Animation(target, [0, 1], options);\n            animation.finished.catch(() => { });\n            return animation;\n        },\n    ], options, options.duration);\n}\nfunction animate(target, keyframesOrOptions, options) {\n    const factory = isFunction(target) ? animateProgress : animate$1;\n    return factory(target, keyframesOrOptions, options);\n}\n\nexport { animate, animateProgress };\n","import { Animation } from '@motionone/animation';\nimport { createAnimate } from './create-animate.es.js';\n\nconst animate = createAnimate(Animation);\n\nexport { animate };\n","import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\n\nclass Animation {\n    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = \"normal\", } = {}) {\n        this.startTime = null;\n        this.rate = 1;\n        this.t = 0;\n        this.cancelTimestamp = null;\n        this.easing = noopReturn;\n        this.duration = 0;\n        this.totalDuration = 0;\n        this.repeat = 0;\n        this.playState = \"idle\";\n        this.finished = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        easing = easing || defaults.easing;\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            initialDuration = custom.duration || initialDuration;\n        }\n        this.repeat = repeat;\n        this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n        this.updateDuration(initialDuration);\n        const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n        this.tick = (timestamp) => {\n            var _a;\n            // TODO: Temporary fix for OptionsResolver typing\n            delay = delay;\n            let t = 0;\n            if (this.pauseTime !== undefined) {\n                t = this.pauseTime;\n            }\n            else {\n                t = (timestamp - this.startTime) * this.rate;\n            }\n            this.t = t;\n            // Convert to seconds\n            t /= 1000;\n            // Rebase on delay\n            t = Math.max(t - delay, 0);\n            /**\n             * If this animation has finished, set the current time\n             * to the total duration.\n             */\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\n                t = this.totalDuration;\n            }\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = t / this.duration;\n            // TODO progress += iterationStart\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (direction === \"reverse\" ||\n                (direction === \"alternate\" && iterationIsOdd) ||\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\n                iterationProgress = 1 - iterationProgress;\n            }\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n            const latest = interpolate$1(this.easing(p));\n            output(latest);\n            const isAnimationFinished = this.pauseTime === undefined &&\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n            if (isAnimationFinished) {\n                this.playState = \"finished\";\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\n            }\n            else if (this.playState !== \"idle\") {\n                this.frameRequestId = requestAnimationFrame(this.tick);\n            }\n        };\n        this.play();\n    }\n    play() {\n        const now = performance.now();\n        this.playState = \"running\";\n        if (this.pauseTime !== undefined) {\n            this.startTime = now - this.pauseTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = now;\n        }\n        this.cancelTimestamp = this.startTime;\n        this.pauseTime = undefined;\n        this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n    pause() {\n        this.playState = \"paused\";\n        this.pauseTime = this.t;\n    }\n    finish() {\n        this.playState = \"finished\";\n        this.tick(0);\n    }\n    stop() {\n        var _a;\n        this.playState = \"idle\";\n        if (this.frameRequestId !== undefined) {\n            cancelAnimationFrame(this.frameRequestId);\n        }\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n    cancel() {\n        this.stop();\n        this.tick(this.cancelTimestamp);\n    }\n    reverse() {\n        this.rate *= -1;\n    }\n    commitStyles() { }\n    updateDuration(duration) {\n        this.duration = duration;\n        this.totalDuration = duration * (this.repeat + 1);\n    }\n    get currentTime() {\n        return this.t;\n    }\n    set currentTime(t) {\n        if (this.pauseTime !== undefined || this.rate === 0) {\n            this.pauseTime = t;\n        }\n        else {\n            this.startTime = performance.now() - t / this.rate;\n        }\n    }\n    get playbackRate() {\n        return this.rate;\n    }\n    set playbackRate(rate) {\n        this.rate = rate;\n    }\n}\n\nexport { Animation };\n","const defaults = {\n    duration: 0.3,\n    delay: 0,\n    endDelay: 0,\n    repeat: 0,\n    easing: \"ease\",\n};\n\nexport { defaults };\n","import { mix } from './mix.es.js';\nimport { noopReturn } from './noop.es.js';\nimport { fillOffset, defaultOffset } from './offset.es.js';\nimport { progress } from './progress.es.js';\nimport { getEasingForSegment } from './easing.es.js';\nimport { clamp } from './clamp.es.js';\n\nfunction interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {\n    const length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    const remainder = length - input.length;\n    remainder > 0 && fillOffset(input, remainder);\n    return (t) => {\n        let i = 0;\n        for (; i < length - 2; i++) {\n            if (t < input[i + 1])\n                break;\n        }\n        let progressInRange = clamp(0, 1, progress(input[i], input[i + 1], t));\n        const segmentEasing = getEasingForSegment(easing, i);\n        progressInRange = segmentEasing(progressInRange);\n        return mix(output[i], output[i + 1], progressInRange);\n    };\n}\n\nexport { interpolate };\n","const mix = (min, max, progress) => -progress * min + progress * max + min;\n\nexport { mix };\n","const noop = () => { };\nconst noopReturn = (v) => v;\n\nexport { noop, noopReturn };\n","import { mix } from './mix.es.js';\nimport { progress } from './progress.es.js';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\nfunction defaultOffset(length) {\n    const offset = [0];\n    fillOffset(offset, length - 1);\n    return offset;\n}\n\nexport { defaultOffset, fillOffset };\n","const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\n\nexport { progress };\n","import { isEasingList } from './is-easing-list.es.js';\nimport { wrap } from './wrap.es.js';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingList(easing)\n        ? easing[wrap(0, easing.length, i)]\n        : easing;\n}\n\nexport { getEasingForSegment };\n","import { isNumber } from './is-number.es.js';\n\nconst isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);\n\nexport { isEasingList };\n","const isNumber = (value) => typeof value === \"number\";\n\nexport { isNumber };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","const isEasingGenerator = (easing) => typeof easing === \"object\" &&\n    Boolean(easing.createAnimation);\n\nexport { isEasingGenerator };\n","import { cubicBezier, steps } from '@motionone/easing';\nimport { isFunction, isCubicBezier, noopReturn } from '@motionone/utils';\n\nconst namedEasings = {\n    ease: cubicBezier(0.25, 0.1, 0.25, 1.0),\n    \"ease-in\": cubicBezier(0.42, 0.0, 1.0, 1.0),\n    \"ease-in-out\": cubicBezier(0.42, 0.0, 0.58, 1.0),\n    \"ease-out\": cubicBezier(0.0, 0.0, 0.58, 1.0),\n};\nconst functionArgsRegex = /\\((.*?)\\)/;\nfunction getEasingFunction(definition) {\n    // If already an easing function, return\n    if (isFunction(definition))\n        return definition;\n    // If an easing curve definition, return bezier function\n    if (isCubicBezier(definition))\n        return cubicBezier(...definition);\n    // If we have a predefined easing function, return\n    if (namedEasings[definition])\n        return namedEasings[definition];\n    // If this is a steps function, attempt to create easing curve\n    if (definition.startsWith(\"steps\")) {\n        const args = functionArgsRegex.exec(definition);\n        if (args) {\n            const argsArray = args[1].split(\",\");\n            return steps(parseFloat(argsArray[0]), argsArray[1].trim());\n        }\n    }\n    return noopReturn;\n}\n\nexport { getEasingFunction };\n","import { noopReturn } from '@motionone/utils';\n\n/*\n  Bezier function generator\n\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noopReturn;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { clamp } from '@motionone/utils';\n\nconst steps = (steps, direction = \"end\") => (progress) => {\n    progress =\n        direction === \"end\"\n            ? Math.min(progress, 0.999)\n            : Math.max(progress, 0.001);\n    const expanded = progress * steps;\n    const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n};\n\nexport { steps };\n","import { isNumber } from './is-number.es.js';\n\nconst isCubicBezier = (easing) => Array.isArray(easing) && isNumber(easing[0]);\n\nexport { isCubicBezier };\n","const isFunction = (value) => typeof value === \"function\";\n\nexport { isFunction };\n","import { invariant } from 'hey-listen';\nimport { animateStyle } from './animate-style.es.js';\nimport { getOptions } from './utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { withControls } from './utils/controls.es.js';\nimport { resolveOption } from '../utils/stagger.es.js';\n\nfunction createAnimate(AnimatePolyfill) {\n    return function animate(elements, keyframes, options = {}) {\n        elements = resolveElements(elements);\n        const numElements = elements.length;\n        invariant(Boolean(numElements), \"No valid element provided.\");\n        invariant(Boolean(keyframes), \"No keyframes defined.\");\n        /**\n         * Create and start new animations\n         */\n        const animationFactories = [];\n        for (let i = 0; i < numElements; i++) {\n            const element = elements[i];\n            for (const key in keyframes) {\n                const valueOptions = getOptions(options, key);\n                valueOptions.delay = resolveOption(valueOptions.delay, i, numElements);\n                const animation = animateStyle(element, key, keyframes[key], valueOptions, AnimatePolyfill);\n                animationFactories.push(animation);\n            }\n        }\n        return withControls(animationFactories, options, \n        /**\n         * TODO:\n         * If easing is set to spring or glide, duration will be dynamically\n         * generated. Ideally we would dynamically generate this from\n         * animation.effect.getComputedTiming().duration but this isn't\n         * supported in iOS13 or our number polyfill. Perhaps it's possible\n         * to Proxy animations returned from animateStyle that has duration\n         * as a getter.\n         */\n        options.duration);\n    };\n}\n\nexport { createAnimate };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","import { getAnimationData, getMotionValue } from './data.es.js';\nimport { isCssVar, registerCssVariable } from './utils/css-var.es.js';\nimport { defaults, isEasingGenerator, isFunction, isEasingList, isNumber, time, noop } from '@motionone/utils';\nimport { isTransform, addTransformToElement, transformDefinitions } from './utils/transforms.es.js';\nimport { convertEasing } from './utils/easing.es.js';\nimport { supports } from './utils/feature-detection.es.js';\nimport { hydrateKeyframes, keyframesList } from './utils/keyframes.es.js';\nimport { style } from './style.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { stopAnimation } from './utils/stop-animation.es.js';\nimport { getUnitConverter } from './utils/get-unit.es.js';\n\nfunction getDevToolsRecord() {\n    return window.__MOTION_DEV_TOOLS_RECORD;\n}\nfunction animateStyle(element, key, keyframesDefinition, options = {}, AnimationPolyfill) {\n    const record = getDevToolsRecord();\n    const isRecording = options.record !== false && record;\n    let animation;\n    let { duration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, easing = defaults.easing, persist = false, direction, offset, allowWebkitAcceleration = false, } = options;\n    const data = getAnimationData(element);\n    const valueIsTransform = isTransform(key);\n    let canAnimateNatively = supports.waapi();\n    /**\n     * If this is an individual transform, we need to map its\n     * key to a CSS variable and update the element's transform style\n     */\n    valueIsTransform && addTransformToElement(element, key);\n    const name = getStyleName(key);\n    const motionValue = getMotionValue(data.values, name);\n    /**\n     * Get definition of value, this will be used to convert numerical\n     * keyframes into the default value type.\n     */\n    const definition = transformDefinitions.get(name);\n    /**\n     * Stop the current animation, if any. Because this will trigger\n     * commitStyles (DOM writes) and we might later trigger DOM reads,\n     * this is fired now and we return a factory function to create\n     * the actual animation that can get called in batch,\n     */\n    stopAnimation(motionValue.animation, !(isEasingGenerator(easing) && motionValue.generator) &&\n        options.record !== false);\n    /**\n     * Batchable factory function containing all DOM reads.\n     */\n    return () => {\n        const readInitialValue = () => { var _a, _b; return (_b = (_a = style.get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0; };\n        /**\n         * Replace null values with the previous keyframe value, or read\n         * it from the DOM if it's the first keyframe.\n         */\n        let keyframes = hydrateKeyframes(keyframesList(keyframesDefinition), readInitialValue);\n        /**\n         * Detect unit type of keyframes.\n         */\n        const toUnit = getUnitConverter(keyframes, definition);\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes, key !== \"opacity\", readInitialValue, name, motionValue);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            duration = custom.duration || duration;\n        }\n        /**\n         * If this is a CSS variable we need to register it with the browser\n         * before it can be animated natively. We also set it with setProperty\n         * rather than directly onto the element.style object.\n         */\n        if (isCssVar(name)) {\n            if (supports.cssRegisterProperty()) {\n                registerCssVariable(name);\n            }\n            else {\n                canAnimateNatively = false;\n            }\n        }\n        /**\n         * If we've been passed a custom easing function, and this browser\n         * does **not** support linear() easing, and the value is a transform\n         * (and thus a pure number) we can still support the custom easing\n         * by falling back to the animation polyfill.\n         */\n        if (valueIsTransform &&\n            !supports.linearEasing() &&\n            (isFunction(easing) || (isEasingList(easing) && easing.some(isFunction)))) {\n            canAnimateNatively = false;\n        }\n        /**\n         * If we can animate this value with WAAPI, do so.\n         */\n        if (canAnimateNatively) {\n            /**\n             * Convert numbers to default value types. Currently this only supports\n             * transforms but it could also support other value types.\n             */\n            if (definition) {\n                keyframes = keyframes.map((value) => isNumber(value) ? definition.toDefaultUnit(value) : value);\n            }\n            /**\n             * If this browser doesn't support partial/implicit keyframes we need to\n             * explicitly provide one.\n             */\n            if (keyframes.length === 1 &&\n                (!supports.partialKeyframes() || isRecording)) {\n                keyframes.unshift(readInitialValue());\n            }\n            const animationOptions = {\n                delay: time.ms(delay),\n                duration: time.ms(duration),\n                endDelay: time.ms(endDelay),\n                easing: !isEasingList(easing)\n                    ? convertEasing(easing, duration)\n                    : undefined,\n                direction,\n                iterations: repeat + 1,\n                fill: \"both\",\n            };\n            animation = element.animate({\n                [name]: keyframes,\n                offset,\n                easing: isEasingList(easing)\n                    ? easing.map((thisEasing) => convertEasing(thisEasing, duration))\n                    : undefined,\n            }, animationOptions);\n            /**\n             * Polyfill finished Promise in browsers that don't support it\n             */\n            if (!animation.finished) {\n                animation.finished = new Promise((resolve, reject) => {\n                    animation.onfinish = resolve;\n                    animation.oncancel = reject;\n                });\n            }\n            const target = keyframes[keyframes.length - 1];\n            animation.finished\n                .then(() => {\n                if (persist)\n                    return;\n                // Apply styles to target\n                style.set(element, name, target);\n                // Ensure fill modes don't persist\n                animation.cancel();\n            })\n                .catch(noop);\n            /**\n             * This forces Webkit to run animations on the main thread by exploiting\n             * this condition:\n             * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099\n             *\n             * This fixes Webkit's timing bugs, like accelerated animations falling\n             * out of sync with main thread animations and massive delays in starting\n             * accelerated animations in WKWebView.\n             */\n            if (!allowWebkitAcceleration)\n                animation.playbackRate = 1.000001;\n            /**\n             * If we can't animate the value natively then we can fallback to the numbers-only\n             * polyfill for transforms.\n             */\n        }\n        else if (AnimationPolyfill && valueIsTransform) {\n            /**\n             * If any keyframe is a string (because we measured it from the DOM), we need to convert\n             * it into a number before passing to the Animation polyfill.\n             */\n            keyframes = keyframes.map((value) => typeof value === \"string\" ? parseFloat(value) : value);\n            /**\n             * If we only have a single keyframe, we need to create an initial keyframe by reading\n             * the current value from the DOM.\n             */\n            if (keyframes.length === 1) {\n                keyframes.unshift(parseFloat(readInitialValue()));\n            }\n            animation = new AnimationPolyfill((latest) => {\n                style.set(element, name, toUnit ? toUnit(latest) : latest);\n            }, keyframes, Object.assign(Object.assign({}, options), { duration,\n                easing }));\n        }\n        else {\n            const target = keyframes[keyframes.length - 1];\n            style.set(element, name, definition && isNumber(target)\n                ? definition.toDefaultUnit(target)\n                : target);\n        }\n        if (isRecording) {\n            record(element, key, keyframes, {\n                duration,\n                delay: delay,\n                easing,\n                repeat,\n                offset,\n            }, \"motion-one\");\n        }\n        motionValue.setAnimation(animation);\n        return animation;\n    };\n}\n\nexport { animateStyle };\n","import { MotionValue } from '@motionone/types';\n\nconst data = new WeakMap();\nfunction getAnimationData(element) {\n    if (!data.has(element)) {\n        data.set(element, {\n            transforms: [],\n            values: new Map(),\n        });\n    }\n    return data.get(element);\n}\nfunction getMotionValue(motionValues, name) {\n    if (!motionValues.has(name)) {\n        motionValues.set(name, new MotionValue());\n    }\n    return motionValues.get(name);\n}\n\nexport { getAnimationData, getMotionValue };\n","/**\n * The MotionValue tracks the state of a single animatable\n * value. Currently, updatedAt and current are unused. The\n * long term idea is to use this to minimise the number\n * of DOM reads, and to abstract the DOM interactions here.\n */\nclass MotionValue {\n    setAnimation(animation) {\n        this.animation = animation;\n        animation === null || animation === void 0 ? void 0 : animation.finished.then(() => this.clearAnimation()).catch(() => { });\n    }\n    clearAnimation() {\n        this.animation = this.generator = undefined;\n    }\n}\n\nexport { MotionValue };\n","import { transformDefinitions } from './transforms.es.js';\n\nconst isCssVar = (name) => name.startsWith(\"--\");\nconst registeredProperties = new Set();\nfunction registerCssVariable(name) {\n    if (registeredProperties.has(name))\n        return;\n    registeredProperties.add(name);\n    try {\n        const { syntax, initialValue } = transformDefinitions.has(name)\n            ? transformDefinitions.get(name)\n            : {};\n        CSS.registerProperty({\n            name,\n            inherits: false,\n            syntax,\n            initialValue,\n        });\n    }\n    catch (e) { }\n}\n\nexport { isCssVar, registerCssVariable, registeredProperties };\n","import { noopReturn, addUniqueItem } from '@motionone/utils';\nimport { getAnimationData } from '../data.es.js';\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nconst axes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\nconst transformAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n};\nconst rotation = {\n    syntax: \"<angle>\",\n    initialValue: \"0deg\",\n    toDefaultUnit: (v) => v + \"deg\",\n};\nconst baseTransformProperties = {\n    translate: {\n        syntax: \"<length-percentage>\",\n        initialValue: \"0px\",\n        toDefaultUnit: (v) => v + \"px\",\n    },\n    rotate: rotation,\n    scale: {\n        syntax: \"<number>\",\n        initialValue: 1,\n        toDefaultUnit: noopReturn,\n    },\n    skew: rotation,\n};\nconst transformDefinitions = new Map();\nconst asTransformCssVar = (name) => `--motion-${name}`;\n/**\n * Generate a list of every possible transform key\n */\nconst transforms = [\"x\", \"y\", \"z\"];\norder.forEach((name) => {\n    axes.forEach((axis) => {\n        transforms.push(name + axis);\n        transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst compareTransformOrder = (a, b) => transforms.indexOf(a) - transforms.indexOf(b);\n/**\n * Provide a quick way to check if a string is the name of a transform\n */\nconst transformLookup = new Set(transforms);\nconst isTransform = (name) => transformLookup.has(name);\nconst addTransformToElement = (element, name) => {\n    // Map x to translateX etc\n    if (transformAlias[name])\n        name = transformAlias[name];\n    const { transforms } = getAnimationData(element);\n    addUniqueItem(transforms, name);\n    /**\n     * TODO: An optimisation here could be to cache the transform in element data\n     * and only update if this has changed.\n     */\n    element.style.transform = buildTransformTemplate(transforms);\n};\nconst buildTransformTemplate = (transforms) => transforms\n    .sort(compareTransformOrder)\n    .reduce(transformListToString, \"\")\n    .trim();\nconst transformListToString = (template, name) => `${template} ${name}(var(${asTransformCssVar(name)}))`;\n\nexport { addTransformToElement, asTransformCssVar, axes, buildTransformTemplate, compareTransformOrder, isTransform, transformAlias, transformDefinitions };\n","function addUniqueItem(array, item) {\n    array.indexOf(item) === -1 && array.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nexport { addUniqueItem, removeItem };\n","const time = {\n    ms: (seconds) => seconds * 1000,\n    s: (milliseconds) => milliseconds / 1000,\n};\n\nexport { time };\n","import { isFunction, defaults, isCubicBezier, progress } from '@motionone/utils';\nimport { supports } from './feature-detection.es.js';\n\n// Create a linear easing point for every x second\nconst resolution = 0.015;\nconst generateLinearEasingPoints = (easing, duration) => {\n    let points = \"\";\n    const numPoints = Math.round(duration / resolution);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return points.substring(0, points.length - 2);\n};\nconst convertEasing = (easing, duration) => {\n    if (isFunction(easing)) {\n        return supports.linearEasing()\n            ? `linear(${generateLinearEasingPoints(easing, duration)})`\n            : defaults.easing;\n    }\n    else {\n        return isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n    }\n};\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { convertEasing, cubicBezierAsString, generateLinearEasingPoints };\n","const testAnimation = (keyframes, options) => document.createElement(\"div\").animate(keyframes, options);\nconst featureTests = {\n    cssRegisterProperty: () => typeof CSS !== \"undefined\" &&\n        Object.hasOwnProperty.call(CSS, \"registerProperty\"),\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n    partialKeyframes: () => {\n        try {\n            testAnimation({ opacity: [1] });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n    finished: () => Boolean(testAnimation({ opacity: [0, 1] }, { duration: 0.001 }).finished),\n    linearEasing: () => {\n        try {\n            testAnimation({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n};\nconst results = {};\nconst supports = {};\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","function hydrateKeyframes(keyframes, readInitialValue) {\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i ? keyframes[i - 1] : readInitialValue();\n        }\n    }\n    return keyframes;\n}\nconst keyframesList = (keyframes) => Array.isArray(keyframes) ? keyframes : [keyframes];\n\nexport { hydrateKeyframes, keyframesList };\n","import { isCssVar } from './utils/css-var.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { transformDefinitions } from './utils/transforms.es.js';\n\nconst style = {\n    get: (element, name) => {\n        name = getStyleName(name);\n        let value = isCssVar(name)\n            ? element.style.getPropertyValue(name)\n            : getComputedStyle(element)[name];\n        if (!value && value !== 0) {\n            const definition = transformDefinitions.get(name);\n            if (definition)\n                value = definition.initialValue;\n        }\n        return value;\n    },\n    set: (element, name, value) => {\n        name = getStyleName(name);\n        if (isCssVar(name)) {\n            element.style.setProperty(name, value);\n        }\n        else {\n            element.style[name] = value;\n        }\n    },\n};\n\nexport { style };\n","import { isTransform, asTransformCssVar, transformAlias } from './transforms.es.js';\n\nfunction getStyleName(key) {\n    if (transformAlias[key])\n        key = transformAlias[key];\n    return isTransform(key) ? asTransformCssVar(key) : key;\n}\n\nexport { getStyleName };\n","function stopAnimation(animation, needsCommit = true) {\n    if (!animation || animation.playState === \"finished\")\n        return;\n    // Suppress error thrown by WAAPI\n    try {\n        if (animation.stop) {\n            animation.stop();\n        }\n        else {\n            needsCommit && animation.commitStyles();\n            animation.cancel();\n        }\n    }\n    catch (e) { }\n}\n\nexport { stopAnimation };\n","import { noopReturn, isString } from '@motionone/utils';\n\nfunction getUnitConverter(keyframes, definition) {\n    var _a;\n    let toUnit = (definition === null || definition === void 0 ? void 0 : definition.toDefaultUnit) || noopReturn;\n    const finalKeyframe = keyframes[keyframes.length - 1];\n    if (isString(finalKeyframe)) {\n        const unit = ((_a = finalKeyframe.match(/(-?[\\d.]+)([a-z%]*)/)) === null || _a === void 0 ? void 0 : _a[2]) || \"\";\n        if (unit)\n            toUnit = (value) => value + unit;\n    }\n    return toUnit;\n}\n\nexport { getUnitConverter };\n","const isString = (value) => typeof value === \"string\";\n\nexport { isString };\n","const getOptions = (options, key) => \n/**\n * TODO: Make test for this\n * Always return a new object otherwise delay is overwritten by results of stagger\n * and this results in no stagger\n */\noptions[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options);\n\nexport { getOptions };\n","function resolveElements(elements, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = document.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = document.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { defaults, noop, time } from '@motionone/utils';\nimport { stopAnimation } from './stop-animation.es.js';\n\nconst createAnimation = (factory) => factory();\nconst withControls = (animationFactory, options, duration = defaults.duration) => {\n    return new Proxy({\n        animations: animationFactory.map(createAnimation).filter(Boolean),\n        duration,\n        options,\n    }, controls);\n};\n/**\n * TODO:\n * Currently this returns the first animation, ideally it would return\n * the first active animation.\n */\nconst getActiveAnimation = (state) => state.animations[0];\nconst controls = {\n    get: (target, key) => {\n        const activeAnimation = getActiveAnimation(target);\n        switch (key) {\n            case \"duration\":\n                return target.duration;\n            case \"currentTime\":\n                return time.s((activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0);\n            case \"playbackRate\":\n            case \"playState\":\n                return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];\n            case \"finished\":\n                if (!target.finished) {\n                    target.finished = Promise.all(target.animations.map(selectFinished)).catch(noop);\n                }\n                return target.finished;\n            case \"stop\":\n                return () => {\n                    target.animations.forEach((animation) => stopAnimation(animation));\n                };\n            case \"forEachNative\":\n                /**\n                 * This is for internal use only, fire a callback for each\n                 * underlying animation.\n                 */\n                return (callback) => {\n                    target.animations.forEach((animation) => callback(animation, target));\n                };\n            default:\n                return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === \"undefined\"\n                    ? undefined\n                    : () => target.animations.forEach((animation) => animation[key]());\n        }\n    },\n    set: (target, key, value) => {\n        switch (key) {\n            case \"currentTime\":\n                value = time.ms(value);\n            // Fall-through\n            case \"playbackRate\":\n                for (let i = 0; i < target.animations.length; i++) {\n                    target.animations[i][key] = value;\n                }\n                return true;\n        }\n        return false;\n    },\n};\nconst selectFinished = (animation) => animation.finished;\n\nexport { controls, withControls };\n","import { isNumber, isFunction } from '@motionone/utils';\nimport { getEasingFunction } from '@motionone/animation';\n\nfunction stagger(duration = 0.1, { start = 0, from = 0, easing } = {}) {\n    return (i, total) => {\n        const fromIndex = isNumber(from) ? from : getFromIndex(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (easing) {\n            const maxDelay = total * duration;\n            const easingFunction = getEasingFunction(easing);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return start + delay;\n    };\n}\nfunction getFromIndex(from, total) {\n    if (from === \"first\") {\n        return 0;\n    }\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction resolveOption(option, i, total) {\n    return isFunction(option) ? option(i, total) : option;\n}\n\nexport { getFromIndex, resolveOption, stagger };\n","import { resolveElements } from '../utils/resolve-elements.es.js';\nimport { isFunction } from '@motionone/utils';\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n        return () => { };\n    }\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (isFunction(newOnEnd)) {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { isString, defaults, isEasingGenerator, defaultOffset, fillOffset, progress } from '@motionone/utils';\nimport { resolveOption } from '../utils/stagger.es.js';\nimport { animateStyle } from '../animate/animate-style.es.js';\nimport { withControls } from '../animate/utils/controls.es.js';\nimport { keyframesList } from '../animate/utils/keyframes.es.js';\nimport { getOptions } from '../animate/utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { calcNextTime } from './utils/calc-time.es.js';\nimport { addKeyframes } from './utils/edit.es.js';\nimport { compareByTime } from './utils/sort.es.js';\nimport { Animation } from '@motionone/animation';\n\nfunction timeline(definition, options = {}) {\n    var _a;\n    const animationDefinitions = createAnimationsFromTimeline(definition, options);\n    /**\n     * Create and start animations\n     */\n    const animationFactories = animationDefinitions\n        .map((definition) => animateStyle(...definition, Animation))\n        .filter(Boolean);\n    return withControls(animationFactories, options, \n    // Get the duration from the first animation definition\n    (_a = animationDefinitions[0]) === null || _a === void 0 ? void 0 : _a[3].duration);\n}\nfunction createAnimationsFromTimeline(definition, _a = {}) {\n    var { defaultOptions = {} } = _a, timelineOptions = __rest(_a, [\"defaultOptions\"]);\n    const animationDefinitions = [];\n    const elementSequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the definition array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < definition.length; i++) {\n        const segment = definition[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (isString(segment)) {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        const [elementDefinition, keyframes, options = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (options.at !== undefined) {\n            currentTime = calcNextTime(currentTime, options.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        /**\n         * Find all the elements specified in the definition and parse value\n         * keyframes from their timeline definitions.\n         */\n        const elements = resolveElements(elementDefinition, elementCache);\n        const numElements = elements.length;\n        for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n            const element = elements[elementIndex];\n            const elementSequence = getElementSequence(element, elementSequences);\n            for (const key in keyframes) {\n                const valueSequence = getValueSequence(key, elementSequence);\n                let valueKeyframes = keyframesList(keyframes[key]);\n                const valueOptions = getOptions(options, key);\n                let { duration = defaultOptions.duration || defaults.duration, easing = defaultOptions.easing || defaults.easing, } = valueOptions;\n                if (isEasingGenerator(easing)) {\n                    invariant(key === \"opacity\" || valueKeyframes.length > 1, \"spring must be provided 2 keyframes within timeline()\");\n                    const custom = easing.createAnimation(valueKeyframes, key !== \"opacity\", () => 0, key);\n                    easing = custom.easing;\n                    valueKeyframes = custom.keyframes || valueKeyframes;\n                    duration = custom.duration || duration;\n                }\n                const delay = resolveOption(options.delay, elementIndex, numElements) || 0;\n                const startTime = currentTime + delay;\n                const targetTime = startTime + duration;\n                /**\n                 *\n                 */\n                let { offset = defaultOffset(valueKeyframes.length) } = valueOptions;\n                /**\n                 * If there's only one offset of 0, fill in a second with length 1\n                 *\n                 * TODO: Ensure there's a test that covers this removal\n                 */\n                if (offset.length === 1 && offset[0] === 0) {\n                    offset[1] = 1;\n                }\n                /**\n                 * Fill out if offset if fewer offsets than keyframes\n                 */\n                const remainder = offset.length - valueKeyframes.length;\n                remainder > 0 && fillOffset(offset, remainder);\n                /**\n                 * If only one value has been set, ie [1], push a null to the start of\n                 * the keyframe array. This will let us mark a keyframe at this point\n                 * that will later be hydrated with the previous value.\n                 */\n                valueKeyframes.length === 1 && valueKeyframes.unshift(null);\n                /**\n                 * Add keyframes, mapping offsets to absolute time.\n                 */\n                addKeyframes(valueSequence, valueKeyframes, easing, offset, startTime, targetTime);\n                maxDuration = Math.max(delay + duration, maxDuration);\n                totalDuration = Math.max(targetTime, totalDuration);\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    elementSequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || defaults.easing);\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(\"linear\");\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            animationDefinitions.push([\n                element,\n                key,\n                keyframes,\n                Object.assign(Object.assign(Object.assign({}, defaultOptions), { duration: totalDuration, easing: valueEasing, offset: valueOffset }), timelineOptions),\n            ]);\n        }\n    });\n    return animationDefinitions;\n}\nfunction getElementSequence(element, sequences) {\n    !sequences.has(element) && sequences.set(element, {});\n    return sequences.get(element);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\n\nexport { createAnimationsFromTimeline, timeline };\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","import { isNumber } from '@motionone/utils';\n\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (isNumber(next)) {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","import { mix, getEasingForSegment, removeItem } from '@motionone/utils';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        return a.value === null ? 1 : -1;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n"],"names":["$f63449e02fe9e20a$var$refresh","$84d7d782659f1eb7$export$d852f5f778460fa4","url","emailData","request","fetch","method","headers","body","JSON","stringify","response","ok","errorData","json","Error","message","error","$f63449e02fe9e20a$var$formBtn","document","querySelector","$f63449e02fe9e20a$var$hideAlert","element","parentElement","removeChild","classList","remove","setTimeout","location","assign","$f63449e02fe9e20a$export$5ea928c9faf85bd3","type","msg","htmlCode","insertAdjacentHTML","window","$edcc32604132db5e$var$formBtn","$edcc32604132db5e$export$1cea2e25b75a88f2","data","result","status","add","textContent","$237a55304db5865e$var$emailRegex","RegExp","$237a55304db5865e$var$formInputs","$237a55304db5865e$var$formStatus","formComplete","emailFormatIsCorrect","$237a55304db5865e$var$shakingField","field","$237a55304db5865e$export$ed692cabb252e59b","forEach","input","value","trim","$0129d5cb2313b09f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$0129d5cb2313b09f$var$_createClass","Constructor","protoProps","staticProps","prototype","$0129d5cb2313b09f$var$ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","$0129d5cb2313b09f$var$_objectSpread2","arguments","source","obj","getOwnPropertyDescriptors","defineProperties","$0129d5cb2313b09f$var$_slicedToArray","arr","$0129d5cb2313b09f$var$_arrayWithHoles","Array","isArray","$0129d5cb2313b09f$var$_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","$0129d5cb2313b09f$var$_unsupportedIterableToArray","$0129d5cb2313b09f$var$_nonIterableRest","TypeError","$0129d5cb2313b09f$var$_toConsumableArray","$0129d5cb2313b09f$var$_arrayWithoutHoles","$0129d5cb2313b09f$var$_arrayLikeToArray","$0129d5cb2313b09f$var$_iterableToArray","iter","from","$0129d5cb2313b09f$var$_nonIterableSpread","o","minLen","n","toString","call","slice","constructor","name","test","len","arr2","$0129d5cb2313b09f$var$extend","getOwnPropertyNames","reduce","extended","currentValue","newValue","$0129d5cb2313b09f$var$isString","$0129d5cb2313b09f$var$isArray","$0129d5cb2313b09f$var$parseSettings","types","settings","split","String","map","absolute","position","$0129d5cb2313b09f$var$parseTypes","none","lines","words","chars","$0129d5cb2313b09f$var$isObject","$0129d5cb2313b09f$var$isNode","nodeType","$0129d5cb2313b09f$var$toArray","$0129d5cb2313b09f$var$isArrayLike","$0129d5cb2313b09f$var$getTargetElements","elements","getElementById","querySelectorAll","concat","append","node","appendChild","createTextNode","replaceChildren","lastChild","replaceWith","parent","parentNode","_len","nodes","_key","ownerDocument","insertBefore","previousSibling","replaceChild","Element","DocumentFragment","$0129d5cb2313b09f$var$entries","entries","$0129d5cb2313b09f$var$expando","$0129d5cb2313b09f$var$cache","$0129d5cb2313b09f$var$uid","$0129d5cb2313b09f$var$set","owner","console","warn","id","getPrototypeOf","$0129d5cb2313b09f$var$get","$0129d5cb2313b09f$var$remove","$0129d5cb2313b09f$var$rsAstralRange","$0129d5cb2313b09f$var$rsComboMarksRange","$0129d5cb2313b09f$var$rsComboSymbolsRange","$0129d5cb2313b09f$var$rsVarRange","$0129d5cb2313b09f$var$rsCombo","$0129d5cb2313b09f$var$rsFitz","$0129d5cb2313b09f$var$rsModifier","$0129d5cb2313b09f$var$rsNonAstral","$0129d5cb2313b09f$var$rsRegional","$0129d5cb2313b09f$var$rsSurrPair","$0129d5cb2313b09f$var$rsZWJ","$0129d5cb2313b09f$var$reOptMod","$0129d5cb2313b09f$var$rsOptVar","$0129d5cb2313b09f$var$rsOptJoin","join","$0129d5cb2313b09f$var$rsSymbol","$0129d5cb2313b09f$var$reUnicode","$0129d5cb2313b09f$var$unicodeRange","$0129d5cb2313b09f$var$reHasUnicode","$0129d5cb2313b09f$var$createElement","attributes","createElement","attribute","rawValue","setAttribute","$0129d5cb2313b09f$var$defaults","splitClass","lineClass","wordClass","charClass","tagName","$0129d5cb2313b09f$var$_defaults","$0129d5cb2313b09f$export$2e2bcd8739ae039","SplitType","options","$0129d5cb2313b09f$var$_classCallCheck","instance","isSplit","_data$get","html","cssWidth","cssHeight","innerHTML","style","width","height","get","set","_this","revert","scrollPos","pageXOffset","pageYOffset","_split2","$0129d5cb2313b09f$var$split","TAG_NAME","VALUE","splitText","wordsAndChars","nodeValue","textNode","createDocumentFragment","$0129d5cb2313b09f$var$toWords","separator","string","replace","WORD","idx","wordElement","characterElementsForCurrentWord","$0129d5cb2313b09f$var$toChars","$0129d5cb2313b09f$var$hasUnicode","match","CHAR","characterElement","children","isWord","isWordStart","isWordEnd","childNodes","isRoot","display","nextSibling","prevSibling","text","textAfter","textBefore","child","_split","elementHeight","elementWidth","contentBox","wordsInEachLine","wordsInCurrentLine","lineOffsetY","cs","align","lineThreshold","getElementsByTagName","nextElementSibling","getComputedStyle","textAlign","fontSize","parseFloat","left","offsetLeft","top","offsetTop","offsetWidth","offsetHeight","isWordLike","_getPosition","$0129d5cb2313b09f$var$getPosition","offsetParent","_scrollPos","scrollX","scrollY","parentX","parentY","parentRect","getBoundingClientRect","x","y","_node$getBoundingClie","nodeName","wordsInThisLine","lineElement","lineDimensions","wordOrElement","Math","max","min","$0129d5cb2313b09f$var$unSplitWords","_data$get2","isLine","parentData","isChildOfLineNode","scrollTo","_ref","_ref2","_ref2$","$dc2d63b917c60329$export$ebe90cb607ad99e","duration","delay","endDelay","repeat","easing","$26fc349e92d9489e$export$2c9e8a9632a706b2","progress","$a9ec4c6371c8c8ef$export$8793edee2d425525","$a9ec4c6371c8c8ef$export$ea6e51872ab1b721","v","$b5fe3643ba3c2da8$export$504d7abb21fa8c9","$9b3af257d77590ba$export$dafee61230cf05c6","offset","remaining","offsetProgress","$9b3af257d77590ba$export$24dbcec0b26e6d9d","$2600ec0fa268729d$export$7e4aa119212bc614","$0f92e8df025f9218$export$981cc9ef33696dc8","$50822229f89c800a$export$4997ffc0176396a6","rangeSize","$e7e8fb4e721c4127$export$41c5e731255a462","$c39040460f3b0b9e$export$7d15b64cf5a3a4c4","$c0efdae2be78a137$export$d81a3021299cadf2","Boolean","createAnimation","$0c9f2a04764915a5$var$calcBezier","t","a1","a2","$0c9f2a04764915a5$export$2c575fa1d20488bd","mX1","mY1","mX2","mY2","getTForX","aX","$0c9f2a04764915a5$var$binarySubdivide","lowerBound","upperBound","currentX","currentT","abs","$fecf794dcc504830$export$be3f796aed065412","steps","direction","expanded","rounded","floor","ceil","$ead554a12e40dce0$export$77290801a62f77a2","$6a6d195304e4357d$export$f6e2535fb5126e54","$feb0fd98b03164bf$var$namedEasings","ease","$feb0fd98b03164bf$var$functionArgsRegex","$feb0fd98b03164bf$export$9681b459c1c8f0f4","definition","startsWith","args","exec","argsArray","$77d743c5fbee771c$export$c35d437ae5945fcd","output","keyframes","initialDuration","startTime","rate","cancelTimestamp","totalDuration","playState","finished","Promise","resolve","reject","custom","updateDuration","interpolate$1","remainder","progressInRange","segmentEasing","tick","timestamp","_a","pauseTime","currentIteration","iterationProgress","iterationIsOdd","p","latest","frameRequestId","requestAnimationFrame","play","now","performance","pause","finish","stop","cancelAnimationFrame","cancel","reverse","commitStyles","currentTime","playbackRate","$82adf2b309a976d9$export$f5708dca728d7177","$091e5423bab70e58$export$8cea36d14ee64562","setAnimation","animation","then","clearAnimation","catch","generator","$4ac2d59feaf07851$var$data","WeakMap","$4ac2d59feaf07851$export$213eea93596b44f","has","transforms","values","Map","$4be6463a6552f378$export$a9a762b9618d4a18","$4be6463a6552f378$export$97b5d3c90609c212","z","$4be6463a6552f378$var$rotation","syntax","initialValue","toDefaultUnit","$4be6463a6552f378$var$baseTransformProperties","translate","rotate","scale","skew","$4be6463a6552f378$export$a9dad2abc3d443d","$4be6463a6552f378$export$7bbd29b1fa8b68d4","$4be6463a6552f378$var$transforms","$4be6463a6552f378$var$order","axis","$4be6463a6552f378$export$11410fe03e8c4042","a","b","indexOf","$4be6463a6552f378$var$transformLookup","Set","$4be6463a6552f378$export$8a546e9da811625d","$4be6463a6552f378$export$40eba1f1af915c93","item","array","transform","$4be6463a6552f378$export$785216816cb6f870","sort","$4be6463a6552f378$var$transformListToString","template","$ccd27e317ff74620$export$30a9abfd5fb9f5f6","$ccd27e317ff74620$export$7a740cb9e3dd106d","$b41dbcd6c6617a69$export$2da9be4cfdb689b1","ms","seconds","s","milliseconds","$15b73f7aeef5597f$var$testAnimation","animate","$15b73f7aeef5597f$var$featureTests","cssRegisterProperty","CSS","hasOwnProperty","waapi","partialKeyframes","opacity","e","linearEasing","$15b73f7aeef5597f$var$results","$15b73f7aeef5597f$export$cde6a56f9669daf6","$b177fba31032c2b0$export$a74bbb7e96c8ced4","points","numPoints","round","substring","$b177fba31032c2b0$export$284d1118c33f9836","$b177fba31032c2b0$export$2523b8f0bd8f44cb","c","d","$330ddc5eb9100e1b$export$388e66a97327a012","$14b715416518df98$export$b6557f397a74f857","$c78e3a46d208c382$export$1d567c320f4763bc","getPropertyValue","setProperty","$2b08528401504e63$export$3cc6f911ef1fd837","needsCommit","$1ec475b080df4cc4$export$844ec244b1367d54","$9ef3fcdee5d7d99d$export$c76cd972d26986f9","keyframesDefinition","AnimationPolyfill","motionValues","record","__MOTION_DEV_TOOLS_RECORD","isRecording","persist","allowWebkitAcceleration","valueIsTransform","canAnimateNatively","motionValue","readInitialValue","_b","toUnit","finalKeyframe","unit","registerProperty","inherits","some","unshift","animationOptions","iterations","fill","thisEasing","onfinish","oncancel","$57d7e8b2ef7ce651$export$d2312e68e1f5ad00","$b9a28f0b498c113a$export$90ceba2564a894f8","selectorCache","$ff34fe8b644280e4$var$createAnimation","factory","$ff34fe8b644280e4$export$c5e4bb50450218c1","animationFactory","Proxy","animations","$ff34fe8b644280e4$export$cc1adf6fb659c762","$ff34fe8b644280e4$var$getActiveAnimation","state","activeAnimation","all","$ff34fe8b644280e4$var$selectFinished","callback","$8c32d4e44fcce1d2$export$e3607ec2d7a891c4","numElements","animationFactories","option","valueOptions","$e7dee9a46833b703$export$290670472807ab5b","$983dfce98d47352b$var$thresholds","any","$e48181ba352d1ccf$export$83ccd85155ba9791","current","prev","labels","$184029bcb6b17be4$export$66dd3fbf44e05bd9","at","SuppressedError","$57751d9537c999c1$var$ctaArrow","$57751d9537c999c1$var$ctaBtn","$57751d9537c999c1$var$headingsub","$57751d9537c999c1$var$headingMain","$57751d9537c999c1$var$ySpaceAmount","$57751d9537c999c1$var$mq","matchMedia","matches","$57751d9537c999c1$var$headingAnimation","$57751d9537c999c1$var$ctaAnimation","$57751d9537c999c1$export$592dbd515a49cf1b","start","total","fromIndex","$98bb634993f4306d$export$a7952f4918e96441","lastIndex","maxDelay","easingFunction","animationDefinitions","$68afdcc30aeb6706$export$ecf4a6d05c8cfe84","defaultOptions","timelineOptions","propertyIsEnumerable","elementSequences","elementCache","timeLabels","prevTime","segment","elementDefinition","maxDuration","elementIndex","elementSequence","sequences","valueSequence","valueKeyframes","targetTime","sequence","endTime","$b8308a889cc84729$export$6f93cdbb78924b88","keyframe","index","splice","valueSequences","valueOffset","valueEasing","elementOrSelector","onStart","root","margin","rootMargin","amount","IntersectionObserver","activeIntersections","observer","entry","onEnd","isIntersecting","newOnEnd","unobserve","delete","threshold","observe","disconnect","sections","$0dfdeabc8d0dc6b3$var$offsetCalculation","heading","ctaContainer","headingHeight","log","event","addEventListener","preventDefault","$0dfdeabc8d0dc6b3$var$formBtn","$0dfdeabc8d0dc6b3$var$form","$0dfdeabc8d0dc6b3$var$formInput","$0dfdeabc8d0dc6b3$var$formTextarea","userInput","clientEmail","projectDetail","formStatus","reset"],"version":3,"file":"index.js.map"}